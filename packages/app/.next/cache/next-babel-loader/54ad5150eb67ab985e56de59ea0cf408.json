{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { initAuth0 } from \"@auth0/nextjs-auth0\";\nimport * as dotenv from \"dotenv\";\nexport * from \"./types\"; // eslint-disable-next-line import/no-mutable-exports\n\nexport var auth = function () {\n  if (true) {\n    return undefined;\n  }\n\n  dotenv.config();\n  /**\n   * We use the same Auth0 application to access\n   * Management API and Authentication API right now.\n   * Avoid leaking AUTH0_CLIENT_SECRET to the frontend or\n   * create two apps -- Next Clientside and Next Serverside if\n   * clientside Auth0 Authentication API actions are needed.\n   *\n   * TODO: Check if this code is accessible in browser.\n   */\n\n  var _process$env = process.env,\n      AUTH0_DOMAIN = _process$env.AUTH0_DOMAIN,\n      AUTH0_CLIENT_ID = _process$env.AUTH0_CLIENT_ID,\n      AUTH0_CLIENT_SECRET = _process$env.AUTH0_CLIENT_SECRET,\n      AUTH0_COOKIE_SECRET = _process$env.AUTH0_COOKIE_SECRET;\n  var auth0 = initAuth0({\n    domain: AUTH0_DOMAIN,\n    clientId: AUTH0_CLIENT_ID,\n    clientSecret: AUTH0_CLIENT_SECRET,\n    scope: \"openid profile\",\n    redirectUri: \"http://localhost:3000/api/login-callback\",\n    postLogoutRedirectUri: \"http://localhost:3000/\",\n    session: {\n      cookieSecret: AUTH0_COOKIE_SECRET,\n      cookieLifetime: 60 * 60 * 8\n    }\n  }); // TODO: Remove me\n  // user id from session will be exactly the user_id in zagrajmy db\n\n  var getSession = function getSession(req) {\n    var session;\n    return _regeneratorRuntime.async(function getSession$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(auth0.getSession(req));\n\n          case 2:\n            session = _context.sent;\n\n            if (session) {\n              // getCookie?\n              session.user.uuid = \"not-implemented-yet\";\n            }\n\n            return _context.abrupt(\"return\", session);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var getSessionOrLogIn = function getSessionOrLogIn(req, res) {\n    var session;\n    return _regeneratorRuntime.async(function getSessionOrLogIn$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!(false && req && res)) {\n              _context2.next = 9;\n              break;\n            }\n\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(getSession(req));\n\n          case 3:\n            session = _context2.sent;\n\n            if (session === null || session === void 0 ? void 0 : session.user) {\n              _context2.next = 8;\n              break;\n            }\n\n            res.writeHead(302, {\n              Location: \"/api/login\"\n            });\n            res.end();\n            return _context2.abrupt(\"return\", {\n              user: null\n            });\n\n          case 8:\n            return _context2.abrupt(\"return\", {\n              user: session.user\n            });\n\n          case 9:\n            return _context2.abrupt(\"return\", {\n              user: null\n            });\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var createManagementClient = function createManagementClient() {\n    if (false) {\n      // eslint-disable-next-line global-require\n      var _ref = require(\"auth0\"),\n          _ManagementClient = _ref.ManagementClient;\n\n      return new _ManagementClient({\n        domain: \"zagrajmy.eu.auth0.com\",\n        clientId: AUTH0_CLIENT_ID,\n        clientSecret: AUTH0_CLIENT_SECRET,\n        scope: \"read:users update:users delete:users\",\n        audience: \"https://zagrajmy.eu.auth0.com/api/v2/\"\n      });\n    }\n\n    return new Proxy({}, {\n      get: function get() {\n        throw new Error(\"ManagementAPI can't be accessed on clientside\");\n      }\n    });\n  };\n\n  return _objectSpread({}, auth0, {\n    getSession: getSession,\n    getSessionOrLogIn: getSessionOrLogIn,\n    management: createManagementClient()\n  });\n}();\nauth = auth || new Proxy({}, {\n  /**\n   * @see https://github.com/auth0/nextjs-auth0/blob/master/src/instance.browser.ts\n   */\n  get: function get(_target, _property) {\n    return function () {\n      return {\n        __SHOULD_NOT_BE_USED_IN_BROWSER: true\n      };\n    };\n  }\n});","map":{"version":3,"sources":["/home/hasparus/workspace/zagrajmy/frontend/packages/app/src/app/auth/index.ts"],"names":["initAuth0","dotenv","auth","undefined","config","process","env","AUTH0_DOMAIN","AUTH0_CLIENT_ID","AUTH0_CLIENT_SECRET","AUTH0_COOKIE_SECRET","auth0","domain","clientId","clientSecret","scope","redirectUri","postLogoutRedirectUri","session","cookieSecret","cookieLifetime","getSession","req","user","uuid","getSessionOrLogIn","res","writeHead","Location","end","createManagementClient","require","ManagementClient","audience","Proxy","get","Error","management","_target","_property","__SHOULD_NOT_BE_USED_IN_BROWSER"],"mappings":"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","sourcesContent":["import { initAuth0 } from \"@auth0/nextjs-auth0\";\nimport { ServerResponse, IncomingMessage } from \"http\";\n\nimport * as dotenv from \"dotenv\";\n\nimport { Session, UserUuid } from \"./types\";\n\nexport * from \"./types\";\n\n// eslint-disable-next-line import/no-mutable-exports\nexport let auth = (() => {\n  if (typeof window !== \"undefined\") {\n    return undefined;\n  }\n\n  dotenv.config();\n\n  /**\n   * We use the same Auth0 application to access\n   * Management API and Authentication API right now.\n   * Avoid leaking AUTH0_CLIENT_SECRET to the frontend or\n   * create two apps -- Next Clientside and Next Serverside if\n   * clientside Auth0 Authentication API actions are needed.\n   *\n   * TODO: Check if this code is accessible in browser.\n   */\n  const {\n    AUTH0_DOMAIN,\n    AUTH0_CLIENT_ID,\n    AUTH0_CLIENT_SECRET,\n    AUTH0_COOKIE_SECRET,\n  } = process.env;\n\n  const auth0 = initAuth0({\n    domain: AUTH0_DOMAIN!,\n    clientId: AUTH0_CLIENT_ID!,\n    clientSecret: AUTH0_CLIENT_SECRET!,\n    scope: \"openid profile\",\n    redirectUri: \"http://localhost:3000/api/login-callback\",\n    postLogoutRedirectUri: \"http://localhost:3000/\",\n    session: {\n      cookieSecret: AUTH0_COOKIE_SECRET!,\n      cookieLifetime: 60 * 60 * 8,\n    },\n  });\n\n  // TODO: Remove me\n  // user id from session will be exactly the user_id in zagrajmy db\n  const getSession = async (\n    req: IncomingMessage\n  ): Promise<Session | undefined | null> => {\n    const session = (await auth0.getSession(req)) as Session;\n\n    if (session) {\n      // getCookie?\n      session.user.uuid = \"not-implemented-yet\" as UserUuid;\n    }\n\n    return session;\n  };\n\n  const getSessionOrLogIn = async (\n    req?: IncomingMessage,\n    res?: ServerResponse\n  ) => {\n    if (typeof window === \"undefined\" && req && res) {\n      const session = await getSession(req);\n      if (!session?.user) {\n        res.writeHead(302, { Location: \"/api/login\" });\n        res.end();\n\n        return { user: null };\n      }\n\n      return { user: session.user };\n    }\n    return { user: null };\n  };\n\n  const createManagementClient = () => {\n    type ManagementClient = import(\"auth0\").ManagementClient;\n    if (typeof window === \"undefined\") {\n      // eslint-disable-next-line global-require\n      const { ManagementClient } = require(\"auth0\") as typeof import(\"auth0\");\n\n      return new ManagementClient({\n        domain: \"zagrajmy.eu.auth0.com\",\n        clientId: AUTH0_CLIENT_ID,\n        clientSecret: AUTH0_CLIENT_SECRET,\n        scope: \"read:users update:users delete:users\",\n        audience: \"https://zagrajmy.eu.auth0.com/api/v2/\",\n      });\n    }\n\n    return new Proxy<ManagementClient>({} as ManagementClient, {\n      get() {\n        throw new Error(`ManagementAPI can't be accessed on clientside`);\n      },\n    });\n  };\n\n  return {\n    ...auth0,\n    getSession,\n    getSessionOrLogIn,\n    management: createManagementClient(),\n  };\n})()!;\n\ntype Auth = typeof auth;\n\nauth =\n  auth ||\n  new Proxy<Auth>({} as Auth, {\n    /**\n     * @see https://github.com/auth0/nextjs-auth0/blob/master/src/instance.browser.ts\n     */\n    get(_target, _property) {\n      return () => ({ __SHOULD_NOT_BE_USED_IN_BROWSER: true });\n    },\n  });\n"]},"metadata":{},"sourceType":"module"}