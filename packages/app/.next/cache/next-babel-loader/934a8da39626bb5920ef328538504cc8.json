{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { universalLanguageDetect } from \"@unly/universal-language-detector\";\nimport App from \"next/app\";\nimport { parseCookies } from \"nookies\";\nimport React from \"react\";\nimport { ThemeProvider as ThemeUiProvider, Styled } from \"theme-ui\"; // It's a dependency of theme-ui\n// Should theme-ui reexport Global?\n// eslint-disable-next-line import/no-extraneous-dependencies\n\nimport { Global } from \"@emotion/core\";\nimport { loadGetInitialProps } from \"next/dist/next-server/lib/utils\";\nimport { theme } from \"../src/ui/theme\";\nimport { NavHeader } from \"../src/app/components\";\nimport { auth } from \"../src/app/auth\";\nimport { AppStateProvider } from \"../src/app/store\";\nimport { SUPPORTED_LANGUAGES, FALLBACK_LANG } from \"../src/i18n\";\nimport { AppFooter } from \"../src/app/components/AppFooter\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { jsx } from \"theme-ui\";\nvar globalStyles = {\n  body: {\n    margin: 0\n  },\n  html: {\n    boxSizing: \"border-box\"\n  },\n  \"*, *:before, *:after\": {\n    boxSizing: \"inherit\"\n  }\n};\n\nvar MyApp = /*#__PURE__*/function (_App) {\n  _inherits(MyApp, _App);\n\n  var _super = _createSuper(MyApp);\n\n  function MyApp() {\n    _classCallCheck(this, MyApp);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(MyApp, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps,\n          appState = _this$props.appState;\n      return jsx(ThemeUiProvider, {\n        theme: theme\n      }, jsx(Global, {\n        styles: globalStyles\n      }), jsx(AppStateProvider, {\n        stateFromInitialProps: appState\n      }, jsx(Styled.root, {\n        sx: theme.styles.root\n      }, jsx(NavHeader, {\n        user: appState.user\n      }), jsx(Component, pageProps), jsx(AppFooter, null))));\n    }\n  }], [{\n    key: \"getInitialProps\",\n\n    /**\n     * We might this logic outside some day when we want to\n     * optimize landing/non-app pages.\n     * https://github.com/zeit/next.js/blob/master/errors/opt-out-auto-static-optimization.md\n     */\n    value: function getInitialProps(_ref) {\n      var _ctx$req, _ctx$req$headers;\n\n      var Component, ctx, pageProps, cookies, lang, session;\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              Component = _ref.Component, ctx = _ref.ctx;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(loadGetInitialProps(Component, ctx));\n\n            case 3:\n              pageProps = _context.sent;\n              cookies = parseCookies(ctx);\n              lang = universalLanguageDetect({\n                supportedLanguages: SUPPORTED_LANGUAGES,\n                fallbackLanguage: FALLBACK_LANG,\n                acceptLanguageHeader: (_ctx$req = ctx.req) === null || _ctx$req === void 0 ? void 0 : (_ctx$req$headers = _ctx$req.headers) === null || _ctx$req$headers === void 0 ? void 0 : _ctx$req$headers[\"accept-language\"],\n                serverCookies: cookies,\n                errorHandler: function errorHandler(error, level, origin, context) {\n                  console.error(error, level, origin, context);\n                }\n              });\n              Object.assign(pageProps, {\n                lang: lang,\n                cookies: cookies\n              });\n\n              if (!ctx.req) {\n                _context.next = 12;\n                break;\n              }\n\n              _context.next = 10;\n              return _regeneratorRuntime.awrap(auth.getSession(ctx.req));\n\n            case 10:\n              session = _context.sent;\n              return _context.abrupt(\"return\", {\n                appState: {\n                  user: session === null || session === void 0 ? void 0 : session.user\n                },\n                pageProps: pageProps\n              });\n\n            case 12:\n              return _context.abrupt(\"return\", {\n                pageProps: pageProps,\n                appState: {}\n              });\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }]);\n\n  return MyApp;\n}(App);\n\nexport { MyApp as default };","map":null,"metadata":{},"sourceType":"module"}