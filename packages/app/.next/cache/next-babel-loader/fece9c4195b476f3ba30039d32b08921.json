{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useForm } from \"react-hook-form\";\nimport { Input as ThInput, Box, Label, Textarea } from \"theme-ui\";\nimport { useTranslation } from \"react-i18next\";\nimport { Page } from \"../../src/app/components\";\nimport { auth } from \"../../src/app/auth\";\nimport { jsx } from \"theme-ui\";\nvar GUILD_ID = 1; // TODO\n\nvar Input = ThInput;\n\nvar CreateMeetingPage = function CreateMeetingPage() {\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var _useForm = useForm({\n    defaultValues: {\n      guild_id: GUILD_ID\n    }\n  }),\n      register = _useForm.register,\n      handleSubmit = _useForm.handleSubmit,\n      errors = _useForm.errors,\n      getValues = _useForm.getValues;\n\n  var onSubmit = function onSubmit(values) {\n    return console.log({\n      values: values\n    });\n  };\n\n  return jsx(Page, null, jsx(Box, {\n    as: \"form\",\n    onSubmit: handleSubmit(onSubmit)\n  }, jsx(Label, null, t(\"title\"), jsx(Input, {\n    name: t(\"title\"),\n    ref: register\n  })), jsx(Label, null, t(\"description\"), jsx(Textarea, {\n    name: t(\"description\"),\n    rows: 5,\n    ref: register,\n    sx: {\n      resize: \"none\"\n    }\n  }))));\n};\n\nCreateMeetingPage.getInitialProps = function _callee(_ref) {\n  var req, res;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          req = _ref.req, res = _ref.res;\n          return _context.abrupt(\"return\", auth.getSessionOrLogIn(req, res));\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default CreateMeetingPage;","map":null,"metadata":{},"sourceType":"module"}