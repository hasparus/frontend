{"ast":null,"code":"var __jsx = React.createElement;\nimport { universalLanguageDetect } from \"@unly/universal-language-detector\";\nimport App from \"next/app\";\nimport { parseCookies } from \"nookies\";\nimport React from \"react\";\nimport { ThemeProvider as ThemeUiProvider, Styled } from \"theme-ui\"; // It's a dependency of theme-ui\n// Should theme-ui reexport Global?\n// eslint-disable-next-line import/no-extraneous-dependencies\n\nimport { Global } from \"@emotion/core\";\nimport { loadGetInitialProps } from \"next/dist/next-server/lib/utils\";\nimport { theme } from \"../src/ui/theme\";\nimport { NavHeader } from \"../src/app/components\";\nimport { auth } from \"../src/app/auth\";\nimport { AppStateProvider } from \"../src/app/store\";\nimport { SUPPORTED_LANGUAGES, FALLBACK_LANG } from \"../src/i18n\";\nimport { AppFooter } from \"../src/app/components/AppFooter\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { jsx } from \"theme-ui\";\nconst globalStyles = {\n  body: {\n    margin: 0\n  },\n  html: {\n    boxSizing: \"border-box\"\n  },\n  \"*, *:before, *:after\": {\n    boxSizing: \"inherit\"\n  }\n};\nexport default class MyApp extends App {\n  /**\n   * We might this logic outside some day when we want to\n   * optimize landing/non-app pages.\n   * https://github.com/zeit/next.js/blob/master/errors/opt-out-auto-static-optimization.md\n   */\n  static async getInitialProps({\n    Component,\n    ctx\n  }) {\n    var _ctx$req, _ctx$req$headers;\n\n    const pageProps = await loadGetInitialProps(Component, ctx);\n    const cookies = parseCookies(ctx);\n    const lang = universalLanguageDetect({\n      supportedLanguages: SUPPORTED_LANGUAGES,\n      fallbackLanguage: FALLBACK_LANG,\n      acceptLanguageHeader: (_ctx$req = ctx.req) === null || _ctx$req === void 0 ? void 0 : (_ctx$req$headers = _ctx$req.headers) === null || _ctx$req$headers === void 0 ? void 0 : _ctx$req$headers[\"accept-language\"],\n      serverCookies: cookies,\n      errorHandler: (error, level, origin, context) => {\n        console.error(error, level, origin, context);\n      }\n    });\n    Object.assign(pageProps, {\n      lang,\n      cookies\n    });\n\n    if (ctx.req) {\n      const session = await auth.getSession(ctx.req);\n      return {\n        appState: {\n          user: session === null || session === void 0 ? void 0 : session.user\n        },\n        pageProps\n      };\n    }\n\n    return {\n      pageProps,\n      appState: {}\n    };\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps,\n      appState\n    } = this.props;\n    return jsx(ThemeUiProvider, {\n      theme: theme\n    }, jsx(Global, {\n      styles: globalStyles\n    }), jsx(AppStateProvider, {\n      stateFromInitialProps: appState\n    }, jsx(Styled.root, {\n      sx: theme.styles.root\n    }, jsx(NavHeader, {\n      user: appState.user\n    }), jsx(Component, pageProps), jsx(AppFooter, null))));\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}