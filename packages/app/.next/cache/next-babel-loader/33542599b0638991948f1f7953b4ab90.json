{"ast":null,"code":"","map":{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":["import { IClaims, ISession } from \"@auth0/nextjs-auth0/dist/session/session\";\nimport { Brand } from \"nom-ts\";\n\n/**\n * Key-value store for the user's claims.\n * @see https://auth0.com/docs/scopes/current/oidc-scopes#standard-claims\n * @see https://auth0.com/docs/users/normalized\n */\ninterface Auth0Claims extends IClaims {\n  given_name: string;\n  family_name: string;\n  nickname: string;\n  name: string;\n  picture?: string;\n  locale?: string; // 'en'\n  email: string;\n  email_verified?: boolean;\n  /**\n   * @example\n   * google-oauth2|117333436324283117304\n   * facebook|1061633990853022\n   */\n  sub: string;\n}\n\nexport type UserUuid = Brand<string, \"UserId\">;\n\n/**\n * User data from our Postgres DB\n */\ninterface ZagrajmyClaims {\n  uuid: UserUuid;\n}\n\n/**\n * User data from Auth0 with our own `uuid`.\n * @see https://auth0.com/docs/scopes/current/oidc-scopes#standard-claims\n * @see https://auth0.com/docs/users/normalized\n */\nexport interface Claims extends Auth0Claims, ZagrajmyClaims {}\n\nexport interface Session extends ISession {\n  user: Claims;\n}\n\n// TODO: Use `export type { User } from 'auth0';` after Babel supports it\nexport type User = import(\"auth0\").User;\n"]},"metadata":{},"sourceType":"module"}