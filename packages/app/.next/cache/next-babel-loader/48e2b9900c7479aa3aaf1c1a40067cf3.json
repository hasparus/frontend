{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { jsx } from \"theme-ui\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nexport const Dl = props => jsx(\"dl\", _extends({\n  sx: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    width: \"500px\",\n    maxWidth: \"100%\",\n    my: 2,\n    p: 2,\n    borderRadius: \"rounded\",\n    bg: \"gray.2\",\n    \"dt, dd\": {\n      flex: \"0 0 50%\"\n    },\n    dd: {\n      marginLeft: 0\n    }\n  }\n}, props));\n\nconst show = x => typeof x === \"object\" ? JSON.stringify(x) : String(x);\n/**\n * Raw and easy presentation UI for any object\n */\n\n\nDl.FromObject = props => {\n  return jsx(Dl, null, Object.entries(props.value).flatMap(([k, v]) => [jsx(\"dt\", {\n    key: `${k}-k`\n  }, k), jsx(\"dd\", {\n    key: `${k}-v`\n  }, show(v))]));\n};","map":null,"metadata":{},"sourceType":"module"}