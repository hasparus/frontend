{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* tslint:disable */\n\n/* eslint-disable */\n// expression to compare columns of type Boolean. All fields are combined with logical 'AND'.\n// columns and relationships of \"cr_user\"\n// aggregated selection of \"cr_user\"\n// aggregate fields of \"cr_user\"\n// order by aggregate values of table \"cr_user\"\n// input type for inserting array relation for remote table \"cr_user\"\n// Boolean expression to filter rows from the table \"cr_user\". All fields are combined with a logical 'AND'.\n// unique or primary key constraints on table \"cr_user\"\n// input type for inserting data into table \"cr_user\"\n// aggregate max on columns\n// order by max() on columns of table \"cr_user\"\n// aggregate min on columns\n// order by min() on columns of table \"cr_user\"\n// response of any mutation on the table \"cr_user\"\n// input type for inserting object relation for remote table \"cr_user\"\n// on conflict condition type for table \"cr_user\"\n// ordering options when selecting data from \"cr_user\"\n// select columns of table \"cr_user\"\n// input type for updating data in table \"cr_user\"\n// update columns of table \"cr_user\"\n// expression to compare columns of type Int. All fields are combined with logical 'AND'.\n// mutation root\n// columns and relationships of \"nb_guild\"\n// aggregated selection of \"nb_guild\"\n// aggregate fields of \"nb_guild\"\n// order by aggregate values of table \"nb_guild\"\n// input type for inserting array relation for remote table \"nb_guild\"\n// aggregate avg on columns\n// order by avg() on columns of table \"nb_guild\"\n// Boolean expression to filter rows from the table \"nb_guild\". All fields are combined with a logical 'AND'.\n// unique or primary key constraints on table \"nb_guild\"\n// input type for incrementing integer columne in table \"nb_guild\"\n// input type for inserting data into table \"nb_guild\"\n// aggregate max on columns\n// order by max() on columns of table \"nb_guild\"\n// aggregate min on columns\n// order by min() on columns of table \"nb_guild\"\n// response of any mutation on the table \"nb_guild\"\n// input type for inserting object relation for remote table \"nb_guild\"\n// on conflict condition type for table \"nb_guild\"\n// ordering options when selecting data from \"nb_guild\"\n// select columns of table \"nb_guild\"\n// input type for updating data in table \"nb_guild\"\n// aggregate stddev on columns\n// order by stddev() on columns of table \"nb_guild\"\n// aggregate stddev_pop on columns\n// order by stddev_pop() on columns of table \"nb_guild\"\n// aggregate stddev_samp on columns\n// order by stddev_samp() on columns of table \"nb_guild\"\n// aggregate sum on columns\n// order by sum() on columns of table \"nb_guild\"\n// update columns of table \"nb_guild\"\n// columns and relationships of \"nb_guild_user\"\n// aggregated selection of \"nb_guild_user\"\n// aggregate fields of \"nb_guild_user\"\n// order by aggregate values of table \"nb_guild_user\"\n// input type for inserting array relation for remote table \"nb_guild_user\"\n// aggregate avg on columns\n// order by avg() on columns of table \"nb_guild_user\"\n// Boolean expression to filter rows from the table \"nb_guild_user\". All fields are combined with a logical 'AND'.\n// unique or primary key constraints on table \"nb_guild_user\"\n// input type for incrementing integer columne in table \"nb_guild_user\"\n// input type for inserting data into table \"nb_guild_user\"\n// aggregate max on columns\n// order by max() on columns of table \"nb_guild_user\"\n// aggregate min on columns\n// order by min() on columns of table \"nb_guild_user\"\n// response of any mutation on the table \"nb_guild_user\"\n// input type for inserting object relation for remote table \"nb_guild_user\"\n// on conflict condition type for table \"nb_guild_user\"\n// ordering options when selecting data from \"nb_guild_user\"\n// select columns of table \"nb_guild_user\"\n// input type for updating data in table \"nb_guild_user\"\n// aggregate stddev on columns\n// order by stddev() on columns of table \"nb_guild_user\"\n// aggregate stddev_pop on columns\n// order by stddev_pop() on columns of table \"nb_guild_user\"\n// aggregate stddev_samp on columns\n// order by stddev_samp() on columns of table \"nb_guild_user\"\n// aggregate sum on columns\n// order by sum() on columns of table \"nb_guild_user\"\n// update columns of table \"nb_guild_user\"\n// aggregate var_pop on columns\n// order by var_pop() on columns of table \"nb_guild_user\"\n// aggregate var_samp on columns\n// order by var_samp() on columns of table \"nb_guild_user\"\n// aggregate variance on columns\n// order by variance() on columns of table \"nb_guild_user\"\n// aggregate var_pop on columns\n// order by var_pop() on columns of table \"nb_guild\"\n// aggregate var_samp on columns\n// order by var_samp() on columns of table \"nb_guild\"\n// aggregate variance on columns\n// order by variance() on columns of table \"nb_guild\"\n// columns and relationships of \"nb_meeting\"\n// aggregated selection of \"nb_meeting\"\n// aggregate fields of \"nb_meeting\"\n// order by aggregate values of table \"nb_meeting\"\n// input type for inserting array relation for remote table \"nb_meeting\"\n// aggregate avg on columns\n// order by avg() on columns of table \"nb_meeting\"\n// Boolean expression to filter rows from the table \"nb_meeting\". All fields are combined with a logical 'AND'.\n// unique or primary key constraints on table \"nb_meeting\"\n// input type for incrementing integer columne in table \"nb_meeting\"\n// input type for inserting data into table \"nb_meeting\"\n// aggregate max on columns\n// order by max() on columns of table \"nb_meeting\"\n// aggregate min on columns\n// order by min() on columns of table \"nb_meeting\"\n// response of any mutation on the table \"nb_meeting\"\n// input type for inserting object relation for remote table \"nb_meeting\"\n// on conflict condition type for table \"nb_meeting\"\n// ordering options when selecting data from \"nb_meeting\"\n// select columns of table \"nb_meeting\"\n// input type for updating data in table \"nb_meeting\"\n// aggregate stddev on columns\n// order by stddev() on columns of table \"nb_meeting\"\n// aggregate stddev_pop on columns\n// order by stddev_pop() on columns of table \"nb_meeting\"\n// aggregate stddev_samp on columns\n// order by stddev_samp() on columns of table \"nb_meeting\"\n// aggregate sum on columns\n// order by sum() on columns of table \"nb_meeting\"\n// update columns of table \"nb_meeting\"\n// columns and relationships of \"nb_meeting_user\"\n// aggregated selection of \"nb_meeting_user\"\n// aggregate fields of \"nb_meeting_user\"\n// order by aggregate values of table \"nb_meeting_user\"\n// input type for inserting array relation for remote table \"nb_meeting_user\"\n// aggregate avg on columns\n// order by avg() on columns of table \"nb_meeting_user\"\n// Boolean expression to filter rows from the table \"nb_meeting_user\". All fields are combined with a logical 'AND'.\n// unique or primary key constraints on table \"nb_meeting_user\"\n// input type for incrementing integer columne in table \"nb_meeting_user\"\n// input type for inserting data into table \"nb_meeting_user\"\n// aggregate max on columns\n// order by max() on columns of table \"nb_meeting_user\"\n// aggregate min on columns\n// order by min() on columns of table \"nb_meeting_user\"\n// response of any mutation on the table \"nb_meeting_user\"\n// input type for inserting object relation for remote table \"nb_meeting_user\"\n// on conflict condition type for table \"nb_meeting_user\"\n// ordering options when selecting data from \"nb_meeting_user\"\n// select columns of table \"nb_meeting_user\"\n// input type for updating data in table \"nb_meeting_user\"\n// aggregate stddev on columns\n// order by stddev() on columns of table \"nb_meeting_user\"\n// aggregate stddev_pop on columns\n// order by stddev_pop() on columns of table \"nb_meeting_user\"\n// aggregate stddev_samp on columns\n// order by stddev_samp() on columns of table \"nb_meeting_user\"\n// aggregate sum on columns\n// order by sum() on columns of table \"nb_meeting_user\"\n// update columns of table \"nb_meeting_user\"\n// aggregate var_pop on columns\n// order by var_pop() on columns of table \"nb_meeting_user\"\n// aggregate var_samp on columns\n// order by var_samp() on columns of table \"nb_meeting_user\"\n// aggregate variance on columns\n// order by variance() on columns of table \"nb_meeting_user\"\n// aggregate var_pop on columns\n// order by var_pop() on columns of table \"nb_meeting\"\n// aggregate var_samp on columns\n// order by var_samp() on columns of table \"nb_meeting\"\n// aggregate variance on columns\n// order by variance() on columns of table \"nb_meeting\"\n// columns and relationships of \"nb_sphere\"\n// aggregated selection of \"nb_sphere\"\n// aggregate fields of \"nb_sphere\"\n// order by aggregate values of table \"nb_sphere\"\n// input type for inserting array relation for remote table \"nb_sphere\"\n// aggregate avg on columns\n// order by avg() on columns of table \"nb_sphere\"\n// Boolean expression to filter rows from the table \"nb_sphere\". All fields are combined with a logical 'AND'.\n// unique or primary key constraints on table \"nb_sphere\"\n// input type for incrementing integer columne in table \"nb_sphere\"\n// input type for inserting data into table \"nb_sphere\"\n// aggregate max on columns\n// order by max() on columns of table \"nb_sphere\"\n// aggregate min on columns\n// order by min() on columns of table \"nb_sphere\"\n// response of any mutation on the table \"nb_sphere\"\n// input type for inserting object relation for remote table \"nb_sphere\"\n// on conflict condition type for table \"nb_sphere\"\n// ordering options when selecting data from \"nb_sphere\"\n// select columns of table \"nb_sphere\"\n// input type for updating data in table \"nb_sphere\"\n// aggregate stddev on columns\n// order by stddev() on columns of table \"nb_sphere\"\n// aggregate stddev_pop on columns\n// order by stddev_pop() on columns of table \"nb_sphere\"\n// aggregate stddev_samp on columns\n// order by stddev_samp() on columns of table \"nb_sphere\"\n// aggregate sum on columns\n// order by sum() on columns of table \"nb_sphere\"\n// update columns of table \"nb_sphere\"\n// columns and relationships of \"nb_sphere_users\"\n// aggregated selection of \"nb_sphere_users\"\n// aggregate fields of \"nb_sphere_users\"\n// order by aggregate values of table \"nb_sphere_users\"\n// input type for inserting array relation for remote table \"nb_sphere_users\"\n// aggregate avg on columns\n// order by avg() on columns of table \"nb_sphere_users\"\n// Boolean expression to filter rows from the table \"nb_sphere_users\". All fields are combined with a logical 'AND'.\n// unique or primary key constraints on table \"nb_sphere_users\"\n// input type for incrementing integer columne in table \"nb_sphere_users\"\n// input type for inserting data into table \"nb_sphere_users\"\n// aggregate max on columns\n// order by max() on columns of table \"nb_sphere_users\"\n// aggregate min on columns\n// order by min() on columns of table \"nb_sphere_users\"\n// response of any mutation on the table \"nb_sphere_users\"\n// input type for inserting object relation for remote table \"nb_sphere_users\"\n// on conflict condition type for table \"nb_sphere_users\"\n// ordering options when selecting data from \"nb_sphere_users\"\n// select columns of table \"nb_sphere_users\"\n// input type for updating data in table \"nb_sphere_users\"\n// aggregate stddev on columns\n// order by stddev() on columns of table \"nb_sphere_users\"\n// aggregate stddev_pop on columns\n// order by stddev_pop() on columns of table \"nb_sphere_users\"\n// aggregate stddev_samp on columns\n// order by stddev_samp() on columns of table \"nb_sphere_users\"\n// aggregate sum on columns\n// order by sum() on columns of table \"nb_sphere_users\"\n// update columns of table \"nb_sphere_users\"\n// aggregate var_pop on columns\n// order by var_pop() on columns of table \"nb_sphere_users\"\n// aggregate var_samp on columns\n// order by var_samp() on columns of table \"nb_sphere_users\"\n// aggregate variance on columns\n// order by variance() on columns of table \"nb_sphere_users\"\n// aggregate var_pop on columns\n// order by var_pop() on columns of table \"nb_sphere\"\n// aggregate var_samp on columns\n// order by var_samp() on columns of table \"nb_sphere\"\n// aggregate variance on columns\n// order by variance() on columns of table \"nb_sphere\"\n// column ordering options\n// query root\n// expression to compare columns of type String. All fields are combined with logical 'AND'.\n// subscription root\n// expression to compare columns of type timestamptz. All fields are combined with logical 'AND'.\n// expression to compare columns of type uuid. All fields are combined with logical 'AND'.\nexport let cr_user_constraint;\n\n(function (cr_user_constraint) {\n  cr_user_constraint[\"cr_user_pkey\"] = \"cr_user_pkey\";\n  cr_user_constraint[\"cr_user_uuid_key\"] = \"cr_user_uuid_key\";\n})(cr_user_constraint || (cr_user_constraint = {}));\n\nexport let cr_user_select_column;\n\n(function (cr_user_select_column) {\n  cr_user_select_column[\"date_joined\"] = \"date_joined\";\n  cr_user_select_column[\"email\"] = \"email\";\n  cr_user_select_column[\"first_name\"] = \"first_name\";\n  cr_user_select_column[\"is_active\"] = \"is_active\";\n  cr_user_select_column[\"is_staff\"] = \"is_staff\";\n  cr_user_select_column[\"is_superuser\"] = \"is_superuser\";\n  cr_user_select_column[\"last_login\"] = \"last_login\";\n  cr_user_select_column[\"last_name\"] = \"last_name\";\n  cr_user_select_column[\"password\"] = \"password\";\n  cr_user_select_column[\"username\"] = \"username\";\n  cr_user_select_column[\"uuid\"] = \"uuid\";\n})(cr_user_select_column || (cr_user_select_column = {}));\n\nexport let cr_user_update_column;\n\n(function (cr_user_update_column) {\n  cr_user_update_column[\"date_joined\"] = \"date_joined\";\n  cr_user_update_column[\"email\"] = \"email\";\n  cr_user_update_column[\"first_name\"] = \"first_name\";\n  cr_user_update_column[\"is_active\"] = \"is_active\";\n  cr_user_update_column[\"is_staff\"] = \"is_staff\";\n  cr_user_update_column[\"is_superuser\"] = \"is_superuser\";\n  cr_user_update_column[\"last_login\"] = \"last_login\";\n  cr_user_update_column[\"last_name\"] = \"last_name\";\n  cr_user_update_column[\"password\"] = \"password\";\n  cr_user_update_column[\"username\"] = \"username\";\n  cr_user_update_column[\"uuid\"] = \"uuid\";\n})(cr_user_update_column || (cr_user_update_column = {}));\n\nexport let nb_guild_constraint;\n\n(function (nb_guild_constraint) {\n  nb_guild_constraint[\"nb_guild_pkey\"] = \"nb_guild_pkey\";\n})(nb_guild_constraint || (nb_guild_constraint = {}));\n\nexport let nb_guild_select_column;\n\n(function (nb_guild_select_column) {\n  nb_guild_select_column[\"created_at\"] = \"created_at\";\n  nb_guild_select_column[\"description\"] = \"description\";\n  nb_guild_select_column[\"id\"] = \"id\";\n  nb_guild_select_column[\"name\"] = \"name\";\n  nb_guild_select_column[\"sphere_id\"] = \"sphere_id\";\n})(nb_guild_select_column || (nb_guild_select_column = {}));\n\nexport let nb_guild_update_column;\n\n(function (nb_guild_update_column) {\n  nb_guild_update_column[\"created_at\"] = \"created_at\";\n  nb_guild_update_column[\"description\"] = \"description\";\n  nb_guild_update_column[\"id\"] = \"id\";\n  nb_guild_update_column[\"name\"] = \"name\";\n  nb_guild_update_column[\"sphere_id\"] = \"sphere_id\";\n})(nb_guild_update_column || (nb_guild_update_column = {}));\n\nexport let nb_guild_user_constraint;\n\n(function (nb_guild_user_constraint) {\n  nb_guild_user_constraint[\"nb_guild_user_pkey\"] = \"nb_guild_user_pkey\";\n})(nb_guild_user_constraint || (nb_guild_user_constraint = {}));\n\nexport let nb_guild_user_select_column;\n\n(function (nb_guild_user_select_column) {\n  nb_guild_user_select_column[\"guild_id\"] = \"guild_id\";\n  nb_guild_user_select_column[\"id\"] = \"id\";\n  nb_guild_user_select_column[\"membership_type\"] = \"membership_type\";\n  nb_guild_user_select_column[\"user_id\"] = \"user_id\";\n})(nb_guild_user_select_column || (nb_guild_user_select_column = {}));\n\nexport let nb_guild_user_update_column;\n\n(function (nb_guild_user_update_column) {\n  nb_guild_user_update_column[\"guild_id\"] = \"guild_id\";\n  nb_guild_user_update_column[\"id\"] = \"id\";\n  nb_guild_user_update_column[\"membership_type\"] = \"membership_type\";\n  nb_guild_user_update_column[\"user_id\"] = \"user_id\";\n})(nb_guild_user_update_column || (nb_guild_user_update_column = {}));\n\nexport let nb_meeting_constraint;\n\n(function (nb_meeting_constraint) {\n  nb_meeting_constraint[\"nb_meeting_pkey\"] = \"nb_meeting_pkey\";\n})(nb_meeting_constraint || (nb_meeting_constraint = {}));\n\nexport let nb_meeting_select_column;\n\n(function (nb_meeting_select_column) {\n  nb_meeting_select_column[\"created_at\"] = \"created_at\";\n  nb_meeting_select_column[\"description\"] = \"description\";\n  nb_meeting_select_column[\"end_time\"] = \"end_time\";\n  nb_meeting_select_column[\"guild_id\"] = \"guild_id\";\n  nb_meeting_select_column[\"id\"] = \"id\";\n  nb_meeting_select_column[\"location\"] = \"location\";\n  nb_meeting_select_column[\"organizer_id\"] = \"organizer_id\";\n  nb_meeting_select_column[\"publication_time\"] = \"publication_time\";\n  nb_meeting_select_column[\"start_time\"] = \"start_time\";\n  nb_meeting_select_column[\"title\"] = \"title\";\n  nb_meeting_select_column[\"updated_at\"] = \"updated_at\";\n})(nb_meeting_select_column || (nb_meeting_select_column = {}));\n\nexport let nb_meeting_update_column;\n\n(function (nb_meeting_update_column) {\n  nb_meeting_update_column[\"created_at\"] = \"created_at\";\n  nb_meeting_update_column[\"description\"] = \"description\";\n  nb_meeting_update_column[\"end_time\"] = \"end_time\";\n  nb_meeting_update_column[\"guild_id\"] = \"guild_id\";\n  nb_meeting_update_column[\"id\"] = \"id\";\n  nb_meeting_update_column[\"location\"] = \"location\";\n  nb_meeting_update_column[\"organizer_id\"] = \"organizer_id\";\n  nb_meeting_update_column[\"publication_time\"] = \"publication_time\";\n  nb_meeting_update_column[\"start_time\"] = \"start_time\";\n  nb_meeting_update_column[\"title\"] = \"title\";\n  nb_meeting_update_column[\"updated_at\"] = \"updated_at\";\n})(nb_meeting_update_column || (nb_meeting_update_column = {}));\n\nexport let nb_meeting_user_constraint;\n\n(function (nb_meeting_user_constraint) {\n  nb_meeting_user_constraint[\"nb_meeting_user_pkey\"] = \"nb_meeting_user_pkey\";\n})(nb_meeting_user_constraint || (nb_meeting_user_constraint = {}));\n\nexport let nb_meeting_user_select_column;\n\n(function (nb_meeting_user_select_column) {\n  nb_meeting_user_select_column[\"id\"] = \"id\";\n  nb_meeting_user_select_column[\"meeting_id\"] = \"meeting_id\";\n  nb_meeting_user_select_column[\"status\"] = \"status\";\n  nb_meeting_user_select_column[\"user_id\"] = \"user_id\";\n})(nb_meeting_user_select_column || (nb_meeting_user_select_column = {}));\n\nexport let nb_meeting_user_update_column;\n\n(function (nb_meeting_user_update_column) {\n  nb_meeting_user_update_column[\"id\"] = \"id\";\n  nb_meeting_user_update_column[\"meeting_id\"] = \"meeting_id\";\n  nb_meeting_user_update_column[\"status\"] = \"status\";\n  nb_meeting_user_update_column[\"user_id\"] = \"user_id\";\n})(nb_meeting_user_update_column || (nb_meeting_user_update_column = {}));\n\nexport let nb_sphere_constraint;\n\n(function (nb_sphere_constraint) {\n  nb_sphere_constraint[\"nb_sphere_pkey\"] = \"nb_sphere_pkey\";\n})(nb_sphere_constraint || (nb_sphere_constraint = {}));\n\nexport let nb_sphere_select_column;\n\n(function (nb_sphere_select_column) {\n  nb_sphere_select_column[\"id\"] = \"id\";\n  nb_sphere_select_column[\"name\"] = \"name\";\n})(nb_sphere_select_column || (nb_sphere_select_column = {}));\n\nexport let nb_sphere_update_column;\n\n(function (nb_sphere_update_column) {\n  nb_sphere_update_column[\"id\"] = \"id\";\n  nb_sphere_update_column[\"name\"] = \"name\";\n})(nb_sphere_update_column || (nb_sphere_update_column = {}));\n\nexport let nb_sphere_users_constraint;\n\n(function (nb_sphere_users_constraint) {\n  nb_sphere_users_constraint[\"nb_sphere_users_pkey\"] = \"nb_sphere_users_pkey\";\n  nb_sphere_users_constraint[\"nb_sphere_users_sphere_id_user_id_aef2df6d_uniq\"] = \"nb_sphere_users_sphere_id_user_id_aef2df6d_uniq\";\n})(nb_sphere_users_constraint || (nb_sphere_users_constraint = {}));\n\nexport let nb_sphere_users_select_column;\n\n(function (nb_sphere_users_select_column) {\n  nb_sphere_users_select_column[\"id\"] = \"id\";\n  nb_sphere_users_select_column[\"sphere_id\"] = \"sphere_id\";\n  nb_sphere_users_select_column[\"user_id\"] = \"user_id\";\n})(nb_sphere_users_select_column || (nb_sphere_users_select_column = {}));\n\nexport let nb_sphere_users_update_column;\n\n(function (nb_sphere_users_update_column) {\n  nb_sphere_users_update_column[\"id\"] = \"id\";\n  nb_sphere_users_update_column[\"sphere_id\"] = \"sphere_id\";\n  nb_sphere_users_update_column[\"user_id\"] = \"user_id\";\n})(nb_sphere_users_update_column || (nb_sphere_users_update_column = {}));\n\nexport let order_by;\n\n(function (order_by) {\n  order_by[\"asc\"] = \"asc\";\n  order_by[\"asc_nulls_first\"] = \"asc_nulls_first\";\n  order_by[\"asc_nulls_last\"] = \"asc_nulls_last\";\n  order_by[\"desc\"] = \"desc\";\n  order_by[\"desc_nulls_first\"] = \"desc_nulls_first\";\n  order_by[\"desc_nulls_last\"] = \"desc_nulls_last\";\n})(order_by || (order_by = {}));\n\nexport const AllTypesProps = {\n  Boolean_comparison_exp: {\n    _eq: {\n      type: \"Boolean\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    _gt: {\n      type: \"Boolean\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    _gte: {\n      type: \"Boolean\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    _in: {\n      type: \"Boolean\",\n      array: true,\n      arrayRequired: false,\n      required: true\n    },\n    _is_null: {\n      type: \"Boolean\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    _lt: {\n      type: \"Boolean\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    _lte: {\n      type: \"Boolean\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    _neq: {\n      type: \"Boolean\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    _nin: {\n      type: \"Boolean\",\n      array: true,\n      arrayRequired: false,\n      required: true\n    }\n  },\n  cr_user: {\n    nb_guild_users: {\n      distinct_on: {\n        type: \"nb_guild_user_select_column\",\n        array: true,\n        arrayRequired: false,\n        required: true\n      },\n      limit: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      offset: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      order_by: {\n        type: \"nb_guild_user_order_by\",\n        array: true,\n        arrayRequired: false,\n        required: true\n      },\n      where: {\n        type: \"nb_guild_user_bool_exp\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      }\n    },\n    nb_guild_users_aggregate: {\n      distinct_on: {\n        type: \"nb_guild_user_select_column\",\n        array: true,\n        arrayRequired: false,\n        required: true\n      },\n      limit: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      offset: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      order_by: {\n        type: \"nb_guild_user_order_by\",\n        array: true,\n        arrayRequired: false,\n        required: true\n      },\n      where: {\n        type: \"nb_guild_user_bool_exp\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      }\n    },\n    nb_meeting_users: {\n      distinct_on: {\n        type: \"nb_meeting_user_select_column\",\n        array: true,\n        arrayRequired: false,\n        required: true\n      },\n      limit: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      offset: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      order_by: {\n        type: \"nb_meeting_user_order_by\",\n        array: true,\n        arrayRequired: false,\n        required: true\n      },\n      where: {\n        type: \"nb_meeting_user_bool_exp\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      }\n    },\n    nb_meeting_users_aggregate: {\n      distinct_on: {\n        type: \"nb_meeting_user_select_column\",\n        array: true,\n        arrayRequired: false,\n        required: true\n      },\n      limit: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      offset: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      order_by: {\n        type: \"nb_meeting_user_order_by\",\n        array: true,\n        arrayRequired: false,\n        required: true\n      },\n      where: {\n        type: \"nb_meeting_user_bool_exp\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      }\n    },\n    nb_meetings: {\n      distinct_on: {\n        type: \"nb_meeting_select_column\",\n        array: true,\n        arrayRequired: false,\n        required: true\n      },\n      limit: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      offset: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      order_by: {\n        type: \"nb_meeting_order_by\",\n        array: true,\n        arrayRequired: false,\n        required: true\n      },\n      where: {\n        type: \"nb_meeting_bool_exp\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      }\n    },\n    nb_meetings_aggregate: {\n      distinct_on: {\n        type: \"nb_meeting_select_column\",\n        array: true,\n        arrayRequired: false,\n        required: true\n      },\n      limit: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      offset: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      order_by: {\n        type: \"nb_meeting_order_by\",\n        array: true,\n        arrayRequired: false,\n        required: true\n      },\n      where: {\n        type: \"nb_meeting_bool_exp\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      }\n    },\n    nb_sphere_users: {\n      distinct_on: {\n        type: \"nb_sphere_users_select_column\",\n        array: true,\n        arrayRequired: false,\n        required: true\n      },\n      limit: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      offset: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      order_by: {\n        type: \"nb_sphere_users_order_by\",\n        array: true,\n        arrayRequired: false,\n        required: true\n      },\n      where: {\n        type: \"nb_sphere_users_bool_exp\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      }\n    },\n    nb_sphere_users_aggregate: {\n      distinct_on: {\n        type: \"nb_sphere_users_select_column\",\n        array: true,\n        arrayRequired: false,\n        required: true\n      },\n      limit: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      offset: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      order_by: {\n        type: \"nb_sphere_users_order_by\",\n        array: true,\n        arrayRequired: false,\n        required: true\n      },\n      where: {\n        type: \"nb_sphere_users_bool_exp\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      }\n    }\n  },\n  cr_user_aggregate_fields: {\n    count: {\n      columns: {\n        type: \"cr_user_select_column\",\n        array: true,\n        arrayRequired: false,\n        required: true\n      },\n      distinct: {\n        type: \"Boolean\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      }\n    }\n  },\n  cr_user_aggregate_order_by: {\n    count: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    max: {\n      type: \"cr_user_max_order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    min: {\n      type: \"cr_user_min_order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  cr_user_arr_rel_insert_input: {\n    data: {\n      type: \"cr_user_insert_input\",\n      array: true,\n      arrayRequired: true,\n      required: true\n    },\n    on_conflict: {\n      type: \"cr_user_on_conflict\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  cr_user_bool_exp: {\n    _and: {\n      type: \"cr_user_bool_exp\",\n      array: true,\n      arrayRequired: false,\n      required: false\n    },\n    _not: {\n      type: \"cr_user_bool_exp\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    _or: {\n      type: \"cr_user_bool_exp\",\n      array: true,\n      arrayRequired: false,\n      required: false\n    },\n    date_joined: {\n      type: \"timestamptz_comparison_exp\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    email: {\n      type: \"String_comparison_exp\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    first_name: {\n      type: \"String_comparison_exp\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    is_active: {\n      type: \"Boolean_comparison_exp\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    is_staff: {\n      type: \"Boolean_comparison_exp\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    is_superuser: {\n      type: \"Boolean_comparison_exp\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    last_login: {\n      type: \"timestamptz_comparison_exp\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    last_name: {\n      type: \"String_comparison_exp\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    nb_guild_users: {\n      type: \"nb_guild_user_bool_exp\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    nb_meeting_users: {\n      type: \"nb_meeting_user_bool_exp\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    nb_meetings: {\n      type: \"nb_meeting_bool_exp\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    nb_sphere_users: {\n      type: \"nb_sphere_users_bool_exp\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    password: {\n      type: \"String_comparison_exp\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    username: {\n      type: \"String_comparison_exp\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    uuid: {\n      type: \"uuid_comparison_exp\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  cr_user_constraint: \"enum\",\n  cr_user_insert_input: {\n    date_joined: {\n      type: \"timestamptz\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    email: {\n      type: \"String\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    first_name: {\n      type: \"String\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    is_active: {\n      type: \"Boolean\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    is_staff: {\n      type: \"Boolean\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    is_superuser: {\n      type: \"Boolean\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    last_login: {\n      type: \"timestamptz\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    last_name: {\n      type: \"String\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    nb_guild_users: {\n      type: \"nb_guild_user_arr_rel_insert_input\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    nb_meeting_users: {\n      type: \"nb_meeting_user_arr_rel_insert_input\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    nb_meetings: {\n      type: \"nb_meeting_arr_rel_insert_input\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    nb_sphere_users: {\n      type: \"nb_sphere_users_arr_rel_insert_input\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    password: {\n      type: \"String\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    username: {\n      type: \"String\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    uuid: {\n      type: \"uuid\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  cr_user_max_order_by: {\n    date_joined: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    email: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    first_name: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    last_login: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    last_name: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    password: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    username: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  cr_user_min_order_by: {\n    date_joined: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    email: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    first_name: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    last_login: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    last_name: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    password: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    username: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  cr_user_obj_rel_insert_input: {\n    data: {\n      type: \"cr_user_insert_input\",\n      array: false,\n      arrayRequired: false,\n      required: true\n    },\n    on_conflict: {\n      type: \"cr_user_on_conflict\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  cr_user_on_conflict: {\n    constraint: {\n      type: \"cr_user_constraint\",\n      array: false,\n      arrayRequired: false,\n      required: true\n    },\n    update_columns: {\n      type: \"cr_user_update_column\",\n      array: true,\n      arrayRequired: true,\n      required: true\n    },\n    where: {\n      type: \"cr_user_bool_exp\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  cr_user_order_by: {\n    date_joined: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    email: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    first_name: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    is_active: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    is_staff: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    is_superuser: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    last_login: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    last_name: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    nb_guild_users_aggregate: {\n      type: \"nb_guild_user_aggregate_order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    nb_meeting_users_aggregate: {\n      type: \"nb_meeting_user_aggregate_order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    nb_meetings_aggregate: {\n      type: \"nb_meeting_aggregate_order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    nb_sphere_users_aggregate: {\n      type: \"nb_sphere_users_aggregate_order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    password: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    username: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    uuid: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  cr_user_select_column: \"enum\",\n  cr_user_set_input: {\n    date_joined: {\n      type: \"timestamptz\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    email: {\n      type: \"String\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    first_name: {\n      type: \"String\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    is_active: {\n      type: \"Boolean\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    is_staff: {\n      type: \"Boolean\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    is_superuser: {\n      type: \"Boolean\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    last_login: {\n      type: \"timestamptz\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    last_name: {\n      type: \"String\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    password: {\n      type: \"String\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    username: {\n      type: \"String\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    uuid: {\n      type: \"uuid\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  cr_user_update_column: \"enum\",\n  Int_comparison_exp: {\n    _eq: {\n      type: \"Int\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    _gt: {\n      type: \"Int\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    _gte: {\n      type: \"Int\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    _in: {\n      type: \"Int\",\n      array: true,\n      arrayRequired: false,\n      required: true\n    },\n    _is_null: {\n      type: \"Boolean\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    _lt: {\n      type: \"Int\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    _lte: {\n      type: \"Int\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    _neq: {\n      type: \"Int\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    _nin: {\n      type: \"Int\",\n      array: true,\n      arrayRequired: false,\n      required: true\n    }\n  },\n  mutation_root: {\n    delete_cr_user: {\n      where: {\n        type: \"cr_user_bool_exp\",\n        array: false,\n        arrayRequired: false,\n        required: true\n      }\n    },\n    delete_nb_guild: {\n      where: {\n        type: \"nb_guild_bool_exp\",\n        array: false,\n        arrayRequired: false,\n        required: true\n      }\n    },\n    delete_nb_guild_user: {\n      where: {\n        type: \"nb_guild_user_bool_exp\",\n        array: false,\n        arrayRequired: false,\n        required: true\n      }\n    },\n    delete_nb_meeting: {\n      where: {\n        type: \"nb_meeting_bool_exp\",\n        array: false,\n        arrayRequired: false,\n        required: true\n      }\n    },\n    delete_nb_meeting_user: {\n      where: {\n        type: \"nb_meeting_user_bool_exp\",\n        array: false,\n        arrayRequired: false,\n        required: true\n      }\n    },\n    delete_nb_sphere: {\n      where: {\n        type: \"nb_sphere_bool_exp\",\n        array: false,\n        arrayRequired: false,\n        required: true\n      }\n    },\n    delete_nb_sphere_users: {\n      where: {\n        type: \"nb_sphere_users_bool_exp\",\n        array: false,\n        arrayRequired: false,\n        required: true\n      }\n    },\n    insert_cr_user: {\n      objects: {\n        type: \"cr_user_insert_input\",\n        array: true,\n        arrayRequired: true,\n        required: true\n      },\n      on_conflict: {\n        type: \"cr_user_on_conflict\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      }\n    },\n    insert_nb_guild: {\n      objects: {\n        type: \"nb_guild_insert_input\",\n        array: true,\n        arrayRequired: true,\n        required: true\n      },\n      on_conflict: {\n        type: \"nb_guild_on_conflict\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      }\n    },\n    insert_nb_guild_user: {\n      objects: {\n        type: \"nb_guild_user_insert_input\",\n        array: true,\n        arrayRequired: true,\n        required: true\n      },\n      on_conflict: {\n        type: \"nb_guild_user_on_conflict\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      }\n    },\n    insert_nb_meeting: {\n      objects: {\n        type: \"nb_meeting_insert_input\",\n        array: true,\n        arrayRequired: true,\n        required: true\n      },\n      on_conflict: {\n        type: \"nb_meeting_on_conflict\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      }\n    },\n    insert_nb_meeting_user: {\n      objects: {\n        type: \"nb_meeting_user_insert_input\",\n        array: true,\n        arrayRequired: true,\n        required: true\n      },\n      on_conflict: {\n        type: \"nb_meeting_user_on_conflict\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      }\n    },\n    insert_nb_sphere: {\n      objects: {\n        type: \"nb_sphere_insert_input\",\n        array: true,\n        arrayRequired: true,\n        required: true\n      },\n      on_conflict: {\n        type: \"nb_sphere_on_conflict\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      }\n    },\n    insert_nb_sphere_users: {\n      objects: {\n        type: \"nb_sphere_users_insert_input\",\n        array: true,\n        arrayRequired: true,\n        required: true\n      },\n      on_conflict: {\n        type: \"nb_sphere_users_on_conflict\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      }\n    },\n    update_cr_user: {\n      _set: {\n        type: \"cr_user_set_input\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      where: {\n        type: \"cr_user_bool_exp\",\n        array: false,\n        arrayRequired: false,\n        required: true\n      }\n    },\n    update_nb_guild: {\n      _inc: {\n        type: \"nb_guild_inc_input\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      _set: {\n        type: \"nb_guild_set_input\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      where: {\n        type: \"nb_guild_bool_exp\",\n        array: false,\n        arrayRequired: false,\n        required: true\n      }\n    },\n    update_nb_guild_user: {\n      _inc: {\n        type: \"nb_guild_user_inc_input\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      _set: {\n        type: \"nb_guild_user_set_input\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      where: {\n        type: \"nb_guild_user_bool_exp\",\n        array: false,\n        arrayRequired: false,\n        required: true\n      }\n    },\n    update_nb_meeting: {\n      _inc: {\n        type: \"nb_meeting_inc_input\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      _set: {\n        type: \"nb_meeting_set_input\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      where: {\n        type: \"nb_meeting_bool_exp\",\n        array: false,\n        arrayRequired: false,\n        required: true\n      }\n    },\n    update_nb_meeting_user: {\n      _inc: {\n        type: \"nb_meeting_user_inc_input\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      _set: {\n        type: \"nb_meeting_user_set_input\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      where: {\n        type: \"nb_meeting_user_bool_exp\",\n        array: false,\n        arrayRequired: false,\n        required: true\n      }\n    },\n    update_nb_sphere: {\n      _inc: {\n        type: \"nb_sphere_inc_input\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      _set: {\n        type: \"nb_sphere_set_input\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      where: {\n        type: \"nb_sphere_bool_exp\",\n        array: false,\n        arrayRequired: false,\n        required: true\n      }\n    },\n    update_nb_sphere_users: {\n      _inc: {\n        type: \"nb_sphere_users_inc_input\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      _set: {\n        type: \"nb_sphere_users_set_input\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      where: {\n        type: \"nb_sphere_users_bool_exp\",\n        array: false,\n        arrayRequired: false,\n        required: true\n      }\n    }\n  },\n  nb_guild: {\n    nb_guild_users: {\n      distinct_on: {\n        type: \"nb_guild_user_select_column\",\n        array: true,\n        arrayRequired: false,\n        required: true\n      },\n      limit: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      offset: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      order_by: {\n        type: \"nb_guild_user_order_by\",\n        array: true,\n        arrayRequired: false,\n        required: true\n      },\n      where: {\n        type: \"nb_guild_user_bool_exp\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      }\n    },\n    nb_guild_users_aggregate: {\n      distinct_on: {\n        type: \"nb_guild_user_select_column\",\n        array: true,\n        arrayRequired: false,\n        required: true\n      },\n      limit: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      offset: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      order_by: {\n        type: \"nb_guild_user_order_by\",\n        array: true,\n        arrayRequired: false,\n        required: true\n      },\n      where: {\n        type: \"nb_guild_user_bool_exp\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      }\n    },\n    nb_meetings: {\n      distinct_on: {\n        type: \"nb_meeting_select_column\",\n        array: true,\n        arrayRequired: false,\n        required: true\n      },\n      limit: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      offset: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      order_by: {\n        type: \"nb_meeting_order_by\",\n        array: true,\n        arrayRequired: false,\n        required: true\n      },\n      where: {\n        type: \"nb_meeting_bool_exp\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      }\n    },\n    nb_meetings_aggregate: {\n      distinct_on: {\n        type: \"nb_meeting_select_column\",\n        array: true,\n        arrayRequired: false,\n        required: true\n      },\n      limit: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      offset: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      order_by: {\n        type: \"nb_meeting_order_by\",\n        array: true,\n        arrayRequired: false,\n        required: true\n      },\n      where: {\n        type: \"nb_meeting_bool_exp\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      }\n    }\n  },\n  nb_guild_aggregate_fields: {\n    count: {\n      columns: {\n        type: \"nb_guild_select_column\",\n        array: true,\n        arrayRequired: false,\n        required: true\n      },\n      distinct: {\n        type: \"Boolean\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      }\n    }\n  },\n  nb_guild_aggregate_order_by: {\n    avg: {\n      type: \"nb_guild_avg_order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    count: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    max: {\n      type: \"nb_guild_max_order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    min: {\n      type: \"nb_guild_min_order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    stddev: {\n      type: \"nb_guild_stddev_order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    stddev_pop: {\n      type: \"nb_guild_stddev_pop_order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    stddev_samp: {\n      type: \"nb_guild_stddev_samp_order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    sum: {\n      type: \"nb_guild_sum_order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    var_pop: {\n      type: \"nb_guild_var_pop_order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    var_samp: {\n      type: \"nb_guild_var_samp_order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    variance: {\n      type: \"nb_guild_variance_order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_guild_arr_rel_insert_input: {\n    data: {\n      type: \"nb_guild_insert_input\",\n      array: true,\n      arrayRequired: true,\n      required: true\n    },\n    on_conflict: {\n      type: \"nb_guild_on_conflict\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_guild_avg_order_by: {\n    id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    sphere_id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_guild_bool_exp: {\n    _and: {\n      type: \"nb_guild_bool_exp\",\n      array: true,\n      arrayRequired: false,\n      required: false\n    },\n    _not: {\n      type: \"nb_guild_bool_exp\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    _or: {\n      type: \"nb_guild_bool_exp\",\n      array: true,\n      arrayRequired: false,\n      required: false\n    },\n    created_at: {\n      type: \"timestamptz_comparison_exp\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    description: {\n      type: \"String_comparison_exp\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    id: {\n      type: \"Int_comparison_exp\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    name: {\n      type: \"String_comparison_exp\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    nb_guild_users: {\n      type: \"nb_guild_user_bool_exp\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    nb_meetings: {\n      type: \"nb_meeting_bool_exp\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    sphere_id: {\n      type: \"Int_comparison_exp\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_guild_constraint: \"enum\",\n  nb_guild_inc_input: {\n    id: {\n      type: \"Int\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    sphere_id: {\n      type: \"Int\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_guild_insert_input: {\n    created_at: {\n      type: \"timestamptz\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    description: {\n      type: \"String\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    id: {\n      type: \"Int\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    name: {\n      type: \"String\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    nb_guild_users: {\n      type: \"nb_guild_user_arr_rel_insert_input\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    nb_meetings: {\n      type: \"nb_meeting_arr_rel_insert_input\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    sphere_id: {\n      type: \"Int\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_guild_max_order_by: {\n    created_at: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    description: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    name: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    sphere_id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_guild_min_order_by: {\n    created_at: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    description: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    name: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    sphere_id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_guild_obj_rel_insert_input: {\n    data: {\n      type: \"nb_guild_insert_input\",\n      array: false,\n      arrayRequired: false,\n      required: true\n    },\n    on_conflict: {\n      type: \"nb_guild_on_conflict\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_guild_on_conflict: {\n    constraint: {\n      type: \"nb_guild_constraint\",\n      array: false,\n      arrayRequired: false,\n      required: true\n    },\n    update_columns: {\n      type: \"nb_guild_update_column\",\n      array: true,\n      arrayRequired: true,\n      required: true\n    },\n    where: {\n      type: \"nb_guild_bool_exp\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_guild_order_by: {\n    created_at: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    description: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    name: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    nb_guild_users_aggregate: {\n      type: \"nb_guild_user_aggregate_order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    nb_meetings_aggregate: {\n      type: \"nb_meeting_aggregate_order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    sphere_id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_guild_select_column: \"enum\",\n  nb_guild_set_input: {\n    created_at: {\n      type: \"timestamptz\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    description: {\n      type: \"String\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    id: {\n      type: \"Int\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    name: {\n      type: \"String\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    sphere_id: {\n      type: \"Int\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_guild_stddev_order_by: {\n    id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    sphere_id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_guild_stddev_pop_order_by: {\n    id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    sphere_id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_guild_stddev_samp_order_by: {\n    id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    sphere_id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_guild_sum_order_by: {\n    id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    sphere_id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_guild_update_column: \"enum\",\n  nb_guild_user_aggregate_fields: {\n    count: {\n      columns: {\n        type: \"nb_guild_user_select_column\",\n        array: true,\n        arrayRequired: false,\n        required: true\n      },\n      distinct: {\n        type: \"Boolean\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      }\n    }\n  },\n  nb_guild_user_aggregate_order_by: {\n    avg: {\n      type: \"nb_guild_user_avg_order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    count: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    max: {\n      type: \"nb_guild_user_max_order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    min: {\n      type: \"nb_guild_user_min_order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    stddev: {\n      type: \"nb_guild_user_stddev_order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    stddev_pop: {\n      type: \"nb_guild_user_stddev_pop_order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    stddev_samp: {\n      type: \"nb_guild_user_stddev_samp_order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    sum: {\n      type: \"nb_guild_user_sum_order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    var_pop: {\n      type: \"nb_guild_user_var_pop_order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    var_samp: {\n      type: \"nb_guild_user_var_samp_order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    variance: {\n      type: \"nb_guild_user_variance_order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_guild_user_arr_rel_insert_input: {\n    data: {\n      type: \"nb_guild_user_insert_input\",\n      array: true,\n      arrayRequired: true,\n      required: true\n    },\n    on_conflict: {\n      type: \"nb_guild_user_on_conflict\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_guild_user_avg_order_by: {\n    guild_id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_guild_user_bool_exp: {\n    _and: {\n      type: \"nb_guild_user_bool_exp\",\n      array: true,\n      arrayRequired: false,\n      required: false\n    },\n    _not: {\n      type: \"nb_guild_user_bool_exp\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    _or: {\n      type: \"nb_guild_user_bool_exp\",\n      array: true,\n      arrayRequired: false,\n      required: false\n    },\n    cr_user: {\n      type: \"cr_user_bool_exp\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    guild_id: {\n      type: \"Int_comparison_exp\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    id: {\n      type: \"Int_comparison_exp\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    membership_type: {\n      type: \"String_comparison_exp\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    nb_guild: {\n      type: \"nb_guild_bool_exp\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    user_id: {\n      type: \"uuid_comparison_exp\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_guild_user_constraint: \"enum\",\n  nb_guild_user_inc_input: {\n    guild_id: {\n      type: \"Int\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    id: {\n      type: \"Int\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_guild_user_insert_input: {\n    cr_user: {\n      type: \"cr_user_obj_rel_insert_input\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    guild_id: {\n      type: \"Int\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    id: {\n      type: \"Int\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    membership_type: {\n      type: \"String\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    nb_guild: {\n      type: \"nb_guild_obj_rel_insert_input\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    user_id: {\n      type: \"uuid\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_guild_user_max_order_by: {\n    guild_id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    membership_type: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_guild_user_min_order_by: {\n    guild_id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    membership_type: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_guild_user_obj_rel_insert_input: {\n    data: {\n      type: \"nb_guild_user_insert_input\",\n      array: false,\n      arrayRequired: false,\n      required: true\n    },\n    on_conflict: {\n      type: \"nb_guild_user_on_conflict\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_guild_user_on_conflict: {\n    constraint: {\n      type: \"nb_guild_user_constraint\",\n      array: false,\n      arrayRequired: false,\n      required: true\n    },\n    update_columns: {\n      type: \"nb_guild_user_update_column\",\n      array: true,\n      arrayRequired: true,\n      required: true\n    },\n    where: {\n      type: \"nb_guild_user_bool_exp\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_guild_user_order_by: {\n    cr_user: {\n      type: \"cr_user_order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    guild_id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    membership_type: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    nb_guild: {\n      type: \"nb_guild_order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    user_id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_guild_user_select_column: \"enum\",\n  nb_guild_user_set_input: {\n    guild_id: {\n      type: \"Int\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    id: {\n      type: \"Int\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    membership_type: {\n      type: \"String\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    user_id: {\n      type: \"uuid\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_guild_user_stddev_order_by: {\n    guild_id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_guild_user_stddev_pop_order_by: {\n    guild_id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_guild_user_stddev_samp_order_by: {\n    guild_id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_guild_user_sum_order_by: {\n    guild_id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_guild_user_update_column: \"enum\",\n  nb_guild_user_var_pop_order_by: {\n    guild_id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_guild_user_var_samp_order_by: {\n    guild_id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_guild_user_variance_order_by: {\n    guild_id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_guild_var_pop_order_by: {\n    id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    sphere_id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_guild_var_samp_order_by: {\n    id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    sphere_id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_guild_variance_order_by: {\n    id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    sphere_id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_meeting: {\n    nb_meeting_users: {\n      distinct_on: {\n        type: \"nb_meeting_user_select_column\",\n        array: true,\n        arrayRequired: false,\n        required: true\n      },\n      limit: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      offset: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      order_by: {\n        type: \"nb_meeting_user_order_by\",\n        array: true,\n        arrayRequired: false,\n        required: true\n      },\n      where: {\n        type: \"nb_meeting_user_bool_exp\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      }\n    },\n    nb_meeting_users_aggregate: {\n      distinct_on: {\n        type: \"nb_meeting_user_select_column\",\n        array: true,\n        arrayRequired: false,\n        required: true\n      },\n      limit: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      offset: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      order_by: {\n        type: \"nb_meeting_user_order_by\",\n        array: true,\n        arrayRequired: false,\n        required: true\n      },\n      where: {\n        type: \"nb_meeting_user_bool_exp\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      }\n    }\n  },\n  nb_meeting_aggregate_fields: {\n    count: {\n      columns: {\n        type: \"nb_meeting_select_column\",\n        array: true,\n        arrayRequired: false,\n        required: true\n      },\n      distinct: {\n        type: \"Boolean\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      }\n    }\n  },\n  nb_meeting_aggregate_order_by: {\n    avg: {\n      type: \"nb_meeting_avg_order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    count: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    max: {\n      type: \"nb_meeting_max_order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    min: {\n      type: \"nb_meeting_min_order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    stddev: {\n      type: \"nb_meeting_stddev_order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    stddev_pop: {\n      type: \"nb_meeting_stddev_pop_order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    stddev_samp: {\n      type: \"nb_meeting_stddev_samp_order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    sum: {\n      type: \"nb_meeting_sum_order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    var_pop: {\n      type: \"nb_meeting_var_pop_order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    var_samp: {\n      type: \"nb_meeting_var_samp_order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    variance: {\n      type: \"nb_meeting_variance_order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_meeting_arr_rel_insert_input: {\n    data: {\n      type: \"nb_meeting_insert_input\",\n      array: true,\n      arrayRequired: true,\n      required: true\n    },\n    on_conflict: {\n      type: \"nb_meeting_on_conflict\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_meeting_avg_order_by: {\n    guild_id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_meeting_bool_exp: {\n    _and: {\n      type: \"nb_meeting_bool_exp\",\n      array: true,\n      arrayRequired: false,\n      required: false\n    },\n    _not: {\n      type: \"nb_meeting_bool_exp\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    _or: {\n      type: \"nb_meeting_bool_exp\",\n      array: true,\n      arrayRequired: false,\n      required: false\n    },\n    created_at: {\n      type: \"timestamptz_comparison_exp\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    description: {\n      type: \"String_comparison_exp\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    end_time: {\n      type: \"timestamptz_comparison_exp\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    guild_id: {\n      type: \"Int_comparison_exp\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    id: {\n      type: \"Int_comparison_exp\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    location: {\n      type: \"String_comparison_exp\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    nb_guild: {\n      type: \"nb_guild_bool_exp\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    nb_meeting_users: {\n      type: \"nb_meeting_user_bool_exp\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    organizer: {\n      type: \"cr_user_bool_exp\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    organizer_id: {\n      type: \"uuid_comparison_exp\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    publication_time: {\n      type: \"timestamptz_comparison_exp\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    start_time: {\n      type: \"timestamptz_comparison_exp\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    title: {\n      type: \"String_comparison_exp\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    updated_at: {\n      type: \"timestamptz_comparison_exp\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_meeting_constraint: \"enum\",\n  nb_meeting_inc_input: {\n    guild_id: {\n      type: \"Int\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    id: {\n      type: \"Int\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_meeting_insert_input: {\n    created_at: {\n      type: \"timestamptz\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    description: {\n      type: \"String\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    end_time: {\n      type: \"timestamptz\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    guild_id: {\n      type: \"Int\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    id: {\n      type: \"Int\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    location: {\n      type: \"String\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    nb_guild: {\n      type: \"nb_guild_obj_rel_insert_input\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    nb_meeting_users: {\n      type: \"nb_meeting_user_arr_rel_insert_input\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    organizer: {\n      type: \"cr_user_obj_rel_insert_input\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    organizer_id: {\n      type: \"uuid\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    publication_time: {\n      type: \"timestamptz\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    start_time: {\n      type: \"timestamptz\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    title: {\n      type: \"String\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    updated_at: {\n      type: \"timestamptz\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_meeting_max_order_by: {\n    created_at: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    description: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    end_time: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    guild_id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    location: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    publication_time: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    start_time: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    title: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    updated_at: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_meeting_min_order_by: {\n    created_at: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    description: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    end_time: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    guild_id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    location: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    publication_time: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    start_time: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    title: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    updated_at: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_meeting_obj_rel_insert_input: {\n    data: {\n      type: \"nb_meeting_insert_input\",\n      array: false,\n      arrayRequired: false,\n      required: true\n    },\n    on_conflict: {\n      type: \"nb_meeting_on_conflict\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_meeting_on_conflict: {\n    constraint: {\n      type: \"nb_meeting_constraint\",\n      array: false,\n      arrayRequired: false,\n      required: true\n    },\n    update_columns: {\n      type: \"nb_meeting_update_column\",\n      array: true,\n      arrayRequired: true,\n      required: true\n    },\n    where: {\n      type: \"nb_meeting_bool_exp\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_meeting_order_by: {\n    created_at: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    description: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    end_time: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    guild_id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    location: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    nb_guild: {\n      type: \"nb_guild_order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    nb_meeting_users_aggregate: {\n      type: \"nb_meeting_user_aggregate_order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    organizer: {\n      type: \"cr_user_order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    organizer_id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    publication_time: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    start_time: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    title: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    updated_at: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_meeting_select_column: \"enum\",\n  nb_meeting_set_input: {\n    created_at: {\n      type: \"timestamptz\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    description: {\n      type: \"String\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    end_time: {\n      type: \"timestamptz\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    guild_id: {\n      type: \"Int\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    id: {\n      type: \"Int\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    location: {\n      type: \"String\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    organizer_id: {\n      type: \"uuid\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    publication_time: {\n      type: \"timestamptz\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    start_time: {\n      type: \"timestamptz\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    title: {\n      type: \"String\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    updated_at: {\n      type: \"timestamptz\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_meeting_stddev_order_by: {\n    guild_id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_meeting_stddev_pop_order_by: {\n    guild_id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_meeting_stddev_samp_order_by: {\n    guild_id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_meeting_sum_order_by: {\n    guild_id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_meeting_update_column: \"enum\",\n  nb_meeting_user_aggregate_fields: {\n    count: {\n      columns: {\n        type: \"nb_meeting_user_select_column\",\n        array: true,\n        arrayRequired: false,\n        required: true\n      },\n      distinct: {\n        type: \"Boolean\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      }\n    }\n  },\n  nb_meeting_user_aggregate_order_by: {\n    avg: {\n      type: \"nb_meeting_user_avg_order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    count: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    max: {\n      type: \"nb_meeting_user_max_order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    min: {\n      type: \"nb_meeting_user_min_order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    stddev: {\n      type: \"nb_meeting_user_stddev_order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    stddev_pop: {\n      type: \"nb_meeting_user_stddev_pop_order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    stddev_samp: {\n      type: \"nb_meeting_user_stddev_samp_order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    sum: {\n      type: \"nb_meeting_user_sum_order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    var_pop: {\n      type: \"nb_meeting_user_var_pop_order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    var_samp: {\n      type: \"nb_meeting_user_var_samp_order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    variance: {\n      type: \"nb_meeting_user_variance_order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_meeting_user_arr_rel_insert_input: {\n    data: {\n      type: \"nb_meeting_user_insert_input\",\n      array: true,\n      arrayRequired: true,\n      required: true\n    },\n    on_conflict: {\n      type: \"nb_meeting_user_on_conflict\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_meeting_user_avg_order_by: {\n    id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    meeting_id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_meeting_user_bool_exp: {\n    _and: {\n      type: \"nb_meeting_user_bool_exp\",\n      array: true,\n      arrayRequired: false,\n      required: false\n    },\n    _not: {\n      type: \"nb_meeting_user_bool_exp\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    _or: {\n      type: \"nb_meeting_user_bool_exp\",\n      array: true,\n      arrayRequired: false,\n      required: false\n    },\n    cr_user: {\n      type: \"cr_user_bool_exp\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    id: {\n      type: \"Int_comparison_exp\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    meeting_id: {\n      type: \"Int_comparison_exp\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    nb_meeting: {\n      type: \"nb_meeting_bool_exp\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    status: {\n      type: \"String_comparison_exp\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    user_id: {\n      type: \"uuid_comparison_exp\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_meeting_user_constraint: \"enum\",\n  nb_meeting_user_inc_input: {\n    id: {\n      type: \"Int\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    meeting_id: {\n      type: \"Int\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_meeting_user_insert_input: {\n    cr_user: {\n      type: \"cr_user_obj_rel_insert_input\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    id: {\n      type: \"Int\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    meeting_id: {\n      type: \"Int\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    nb_meeting: {\n      type: \"nb_meeting_obj_rel_insert_input\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    status: {\n      type: \"String\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    user_id: {\n      type: \"uuid\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_meeting_user_max_order_by: {\n    id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    meeting_id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    status: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_meeting_user_min_order_by: {\n    id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    meeting_id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    status: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_meeting_user_obj_rel_insert_input: {\n    data: {\n      type: \"nb_meeting_user_insert_input\",\n      array: false,\n      arrayRequired: false,\n      required: true\n    },\n    on_conflict: {\n      type: \"nb_meeting_user_on_conflict\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_meeting_user_on_conflict: {\n    constraint: {\n      type: \"nb_meeting_user_constraint\",\n      array: false,\n      arrayRequired: false,\n      required: true\n    },\n    update_columns: {\n      type: \"nb_meeting_user_update_column\",\n      array: true,\n      arrayRequired: true,\n      required: true\n    },\n    where: {\n      type: \"nb_meeting_user_bool_exp\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_meeting_user_order_by: {\n    cr_user: {\n      type: \"cr_user_order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    meeting_id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    nb_meeting: {\n      type: \"nb_meeting_order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    status: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    user_id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_meeting_user_select_column: \"enum\",\n  nb_meeting_user_set_input: {\n    id: {\n      type: \"Int\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    meeting_id: {\n      type: \"Int\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    status: {\n      type: \"String\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    user_id: {\n      type: \"uuid\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_meeting_user_stddev_order_by: {\n    id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    meeting_id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_meeting_user_stddev_pop_order_by: {\n    id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    meeting_id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_meeting_user_stddev_samp_order_by: {\n    id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    meeting_id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_meeting_user_sum_order_by: {\n    id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    meeting_id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_meeting_user_update_column: \"enum\",\n  nb_meeting_user_var_pop_order_by: {\n    id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    meeting_id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_meeting_user_var_samp_order_by: {\n    id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    meeting_id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_meeting_user_variance_order_by: {\n    id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    meeting_id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_meeting_var_pop_order_by: {\n    guild_id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_meeting_var_samp_order_by: {\n    guild_id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_meeting_variance_order_by: {\n    guild_id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_sphere: {\n    nb_sphere_users: {\n      distinct_on: {\n        type: \"nb_sphere_users_select_column\",\n        array: true,\n        arrayRequired: false,\n        required: true\n      },\n      limit: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      offset: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      order_by: {\n        type: \"nb_sphere_users_order_by\",\n        array: true,\n        arrayRequired: false,\n        required: true\n      },\n      where: {\n        type: \"nb_sphere_users_bool_exp\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      }\n    },\n    nb_sphere_users_aggregate: {\n      distinct_on: {\n        type: \"nb_sphere_users_select_column\",\n        array: true,\n        arrayRequired: false,\n        required: true\n      },\n      limit: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      offset: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      order_by: {\n        type: \"nb_sphere_users_order_by\",\n        array: true,\n        arrayRequired: false,\n        required: true\n      },\n      where: {\n        type: \"nb_sphere_users_bool_exp\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      }\n    }\n  },\n  nb_sphere_aggregate_fields: {\n    count: {\n      columns: {\n        type: \"nb_sphere_select_column\",\n        array: true,\n        arrayRequired: false,\n        required: true\n      },\n      distinct: {\n        type: \"Boolean\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      }\n    }\n  },\n  nb_sphere_aggregate_order_by: {\n    avg: {\n      type: \"nb_sphere_avg_order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    count: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    max: {\n      type: \"nb_sphere_max_order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    min: {\n      type: \"nb_sphere_min_order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    stddev: {\n      type: \"nb_sphere_stddev_order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    stddev_pop: {\n      type: \"nb_sphere_stddev_pop_order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    stddev_samp: {\n      type: \"nb_sphere_stddev_samp_order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    sum: {\n      type: \"nb_sphere_sum_order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    var_pop: {\n      type: \"nb_sphere_var_pop_order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    var_samp: {\n      type: \"nb_sphere_var_samp_order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    variance: {\n      type: \"nb_sphere_variance_order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_sphere_arr_rel_insert_input: {\n    data: {\n      type: \"nb_sphere_insert_input\",\n      array: true,\n      arrayRequired: true,\n      required: true\n    },\n    on_conflict: {\n      type: \"nb_sphere_on_conflict\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_sphere_avg_order_by: {\n    id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_sphere_bool_exp: {\n    _and: {\n      type: \"nb_sphere_bool_exp\",\n      array: true,\n      arrayRequired: false,\n      required: false\n    },\n    _not: {\n      type: \"nb_sphere_bool_exp\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    _or: {\n      type: \"nb_sphere_bool_exp\",\n      array: true,\n      arrayRequired: false,\n      required: false\n    },\n    id: {\n      type: \"Int_comparison_exp\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    name: {\n      type: \"String_comparison_exp\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    nb_sphere_users: {\n      type: \"nb_sphere_users_bool_exp\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_sphere_constraint: \"enum\",\n  nb_sphere_inc_input: {\n    id: {\n      type: \"Int\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_sphere_insert_input: {\n    id: {\n      type: \"Int\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    name: {\n      type: \"String\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    nb_sphere_users: {\n      type: \"nb_sphere_users_arr_rel_insert_input\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_sphere_max_order_by: {\n    id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    name: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_sphere_min_order_by: {\n    id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    name: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_sphere_obj_rel_insert_input: {\n    data: {\n      type: \"nb_sphere_insert_input\",\n      array: false,\n      arrayRequired: false,\n      required: true\n    },\n    on_conflict: {\n      type: \"nb_sphere_on_conflict\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_sphere_on_conflict: {\n    constraint: {\n      type: \"nb_sphere_constraint\",\n      array: false,\n      arrayRequired: false,\n      required: true\n    },\n    update_columns: {\n      type: \"nb_sphere_update_column\",\n      array: true,\n      arrayRequired: true,\n      required: true\n    },\n    where: {\n      type: \"nb_sphere_bool_exp\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_sphere_order_by: {\n    id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    name: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    nb_sphere_users_aggregate: {\n      type: \"nb_sphere_users_aggregate_order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_sphere_select_column: \"enum\",\n  nb_sphere_set_input: {\n    id: {\n      type: \"Int\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    name: {\n      type: \"String\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_sphere_stddev_order_by: {\n    id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_sphere_stddev_pop_order_by: {\n    id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_sphere_stddev_samp_order_by: {\n    id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_sphere_sum_order_by: {\n    id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_sphere_update_column: \"enum\",\n  nb_sphere_users_aggregate_fields: {\n    count: {\n      columns: {\n        type: \"nb_sphere_users_select_column\",\n        array: true,\n        arrayRequired: false,\n        required: true\n      },\n      distinct: {\n        type: \"Boolean\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      }\n    }\n  },\n  nb_sphere_users_aggregate_order_by: {\n    avg: {\n      type: \"nb_sphere_users_avg_order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    count: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    max: {\n      type: \"nb_sphere_users_max_order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    min: {\n      type: \"nb_sphere_users_min_order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    stddev: {\n      type: \"nb_sphere_users_stddev_order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    stddev_pop: {\n      type: \"nb_sphere_users_stddev_pop_order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    stddev_samp: {\n      type: \"nb_sphere_users_stddev_samp_order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    sum: {\n      type: \"nb_sphere_users_sum_order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    var_pop: {\n      type: \"nb_sphere_users_var_pop_order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    var_samp: {\n      type: \"nb_sphere_users_var_samp_order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    variance: {\n      type: \"nb_sphere_users_variance_order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_sphere_users_arr_rel_insert_input: {\n    data: {\n      type: \"nb_sphere_users_insert_input\",\n      array: true,\n      arrayRequired: true,\n      required: true\n    },\n    on_conflict: {\n      type: \"nb_sphere_users_on_conflict\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_sphere_users_avg_order_by: {\n    id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    sphere_id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_sphere_users_bool_exp: {\n    _and: {\n      type: \"nb_sphere_users_bool_exp\",\n      array: true,\n      arrayRequired: false,\n      required: false\n    },\n    _not: {\n      type: \"nb_sphere_users_bool_exp\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    _or: {\n      type: \"nb_sphere_users_bool_exp\",\n      array: true,\n      arrayRequired: false,\n      required: false\n    },\n    cr_user: {\n      type: \"cr_user_bool_exp\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    id: {\n      type: \"Int_comparison_exp\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    nb_sphere: {\n      type: \"nb_sphere_bool_exp\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    sphere_id: {\n      type: \"Int_comparison_exp\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    user_id: {\n      type: \"uuid_comparison_exp\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_sphere_users_constraint: \"enum\",\n  nb_sphere_users_inc_input: {\n    id: {\n      type: \"Int\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    sphere_id: {\n      type: \"Int\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_sphere_users_insert_input: {\n    cr_user: {\n      type: \"cr_user_obj_rel_insert_input\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    id: {\n      type: \"Int\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    nb_sphere: {\n      type: \"nb_sphere_obj_rel_insert_input\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    sphere_id: {\n      type: \"Int\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    user_id: {\n      type: \"uuid\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_sphere_users_max_order_by: {\n    id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    sphere_id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_sphere_users_min_order_by: {\n    id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    sphere_id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_sphere_users_obj_rel_insert_input: {\n    data: {\n      type: \"nb_sphere_users_insert_input\",\n      array: false,\n      arrayRequired: false,\n      required: true\n    },\n    on_conflict: {\n      type: \"nb_sphere_users_on_conflict\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_sphere_users_on_conflict: {\n    constraint: {\n      type: \"nb_sphere_users_constraint\",\n      array: false,\n      arrayRequired: false,\n      required: true\n    },\n    update_columns: {\n      type: \"nb_sphere_users_update_column\",\n      array: true,\n      arrayRequired: true,\n      required: true\n    },\n    where: {\n      type: \"nb_sphere_users_bool_exp\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_sphere_users_order_by: {\n    cr_user: {\n      type: \"cr_user_order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    nb_sphere: {\n      type: \"nb_sphere_order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    sphere_id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    user_id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_sphere_users_select_column: \"enum\",\n  nb_sphere_users_set_input: {\n    id: {\n      type: \"Int\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    sphere_id: {\n      type: \"Int\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    user_id: {\n      type: \"uuid\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_sphere_users_stddev_order_by: {\n    id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    sphere_id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_sphere_users_stddev_pop_order_by: {\n    id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    sphere_id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_sphere_users_stddev_samp_order_by: {\n    id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    sphere_id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_sphere_users_sum_order_by: {\n    id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    sphere_id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_sphere_users_update_column: \"enum\",\n  nb_sphere_users_var_pop_order_by: {\n    id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    sphere_id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_sphere_users_var_samp_order_by: {\n    id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    sphere_id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_sphere_users_variance_order_by: {\n    id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    sphere_id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_sphere_var_pop_order_by: {\n    id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_sphere_var_samp_order_by: {\n    id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  nb_sphere_variance_order_by: {\n    id: {\n      type: \"order_by\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  order_by: \"enum\",\n  query_root: {\n    cr_user: {\n      distinct_on: {\n        type: \"cr_user_select_column\",\n        array: true,\n        arrayRequired: false,\n        required: true\n      },\n      limit: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      offset: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      order_by: {\n        type: \"cr_user_order_by\",\n        array: true,\n        arrayRequired: false,\n        required: true\n      },\n      where: {\n        type: \"cr_user_bool_exp\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      }\n    },\n    cr_user_aggregate: {\n      distinct_on: {\n        type: \"cr_user_select_column\",\n        array: true,\n        arrayRequired: false,\n        required: true\n      },\n      limit: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      offset: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      order_by: {\n        type: \"cr_user_order_by\",\n        array: true,\n        arrayRequired: false,\n        required: true\n      },\n      where: {\n        type: \"cr_user_bool_exp\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      }\n    },\n    cr_user_by_pk: {\n      uuid: {\n        type: \"uuid\",\n        array: false,\n        arrayRequired: false,\n        required: true\n      }\n    },\n    nb_guild: {\n      distinct_on: {\n        type: \"nb_guild_select_column\",\n        array: true,\n        arrayRequired: false,\n        required: true\n      },\n      limit: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      offset: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      order_by: {\n        type: \"nb_guild_order_by\",\n        array: true,\n        arrayRequired: false,\n        required: true\n      },\n      where: {\n        type: \"nb_guild_bool_exp\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      }\n    },\n    nb_guild_aggregate: {\n      distinct_on: {\n        type: \"nb_guild_select_column\",\n        array: true,\n        arrayRequired: false,\n        required: true\n      },\n      limit: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      offset: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      order_by: {\n        type: \"nb_guild_order_by\",\n        array: true,\n        arrayRequired: false,\n        required: true\n      },\n      where: {\n        type: \"nb_guild_bool_exp\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      }\n    },\n    nb_guild_by_pk: {\n      id: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: true\n      }\n    },\n    nb_guild_user: {\n      distinct_on: {\n        type: \"nb_guild_user_select_column\",\n        array: true,\n        arrayRequired: false,\n        required: true\n      },\n      limit: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      offset: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      order_by: {\n        type: \"nb_guild_user_order_by\",\n        array: true,\n        arrayRequired: false,\n        required: true\n      },\n      where: {\n        type: \"nb_guild_user_bool_exp\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      }\n    },\n    nb_guild_user_aggregate: {\n      distinct_on: {\n        type: \"nb_guild_user_select_column\",\n        array: true,\n        arrayRequired: false,\n        required: true\n      },\n      limit: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      offset: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      order_by: {\n        type: \"nb_guild_user_order_by\",\n        array: true,\n        arrayRequired: false,\n        required: true\n      },\n      where: {\n        type: \"nb_guild_user_bool_exp\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      }\n    },\n    nb_guild_user_by_pk: {\n      id: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: true\n      }\n    },\n    nb_meeting: {\n      distinct_on: {\n        type: \"nb_meeting_select_column\",\n        array: true,\n        arrayRequired: false,\n        required: true\n      },\n      limit: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      offset: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      order_by: {\n        type: \"nb_meeting_order_by\",\n        array: true,\n        arrayRequired: false,\n        required: true\n      },\n      where: {\n        type: \"nb_meeting_bool_exp\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      }\n    },\n    nb_meeting_aggregate: {\n      distinct_on: {\n        type: \"nb_meeting_select_column\",\n        array: true,\n        arrayRequired: false,\n        required: true\n      },\n      limit: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      offset: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      order_by: {\n        type: \"nb_meeting_order_by\",\n        array: true,\n        arrayRequired: false,\n        required: true\n      },\n      where: {\n        type: \"nb_meeting_bool_exp\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      }\n    },\n    nb_meeting_by_pk: {\n      id: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: true\n      }\n    },\n    nb_meeting_user: {\n      distinct_on: {\n        type: \"nb_meeting_user_select_column\",\n        array: true,\n        arrayRequired: false,\n        required: true\n      },\n      limit: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      offset: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      order_by: {\n        type: \"nb_meeting_user_order_by\",\n        array: true,\n        arrayRequired: false,\n        required: true\n      },\n      where: {\n        type: \"nb_meeting_user_bool_exp\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      }\n    },\n    nb_meeting_user_aggregate: {\n      distinct_on: {\n        type: \"nb_meeting_user_select_column\",\n        array: true,\n        arrayRequired: false,\n        required: true\n      },\n      limit: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      offset: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      order_by: {\n        type: \"nb_meeting_user_order_by\",\n        array: true,\n        arrayRequired: false,\n        required: true\n      },\n      where: {\n        type: \"nb_meeting_user_bool_exp\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      }\n    },\n    nb_meeting_user_by_pk: {\n      id: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: true\n      }\n    },\n    nb_sphere: {\n      distinct_on: {\n        type: \"nb_sphere_select_column\",\n        array: true,\n        arrayRequired: false,\n        required: true\n      },\n      limit: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      offset: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      order_by: {\n        type: \"nb_sphere_order_by\",\n        array: true,\n        arrayRequired: false,\n        required: true\n      },\n      where: {\n        type: \"nb_sphere_bool_exp\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      }\n    },\n    nb_sphere_aggregate: {\n      distinct_on: {\n        type: \"nb_sphere_select_column\",\n        array: true,\n        arrayRequired: false,\n        required: true\n      },\n      limit: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      offset: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      order_by: {\n        type: \"nb_sphere_order_by\",\n        array: true,\n        arrayRequired: false,\n        required: true\n      },\n      where: {\n        type: \"nb_sphere_bool_exp\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      }\n    },\n    nb_sphere_by_pk: {\n      id: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: true\n      }\n    },\n    nb_sphere_users: {\n      distinct_on: {\n        type: \"nb_sphere_users_select_column\",\n        array: true,\n        arrayRequired: false,\n        required: true\n      },\n      limit: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      offset: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      order_by: {\n        type: \"nb_sphere_users_order_by\",\n        array: true,\n        arrayRequired: false,\n        required: true\n      },\n      where: {\n        type: \"nb_sphere_users_bool_exp\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      }\n    },\n    nb_sphere_users_aggregate: {\n      distinct_on: {\n        type: \"nb_sphere_users_select_column\",\n        array: true,\n        arrayRequired: false,\n        required: true\n      },\n      limit: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      offset: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      order_by: {\n        type: \"nb_sphere_users_order_by\",\n        array: true,\n        arrayRequired: false,\n        required: true\n      },\n      where: {\n        type: \"nb_sphere_users_bool_exp\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      }\n    },\n    nb_sphere_users_by_pk: {\n      id: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: true\n      }\n    }\n  },\n  String_comparison_exp: {\n    _eq: {\n      type: \"String\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    _gt: {\n      type: \"String\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    _gte: {\n      type: \"String\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    _ilike: {\n      type: \"String\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    _in: {\n      type: \"String\",\n      array: true,\n      arrayRequired: false,\n      required: true\n    },\n    _is_null: {\n      type: \"Boolean\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    _like: {\n      type: \"String\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    _lt: {\n      type: \"String\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    _lte: {\n      type: \"String\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    _neq: {\n      type: \"String\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    _nilike: {\n      type: \"String\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    _nin: {\n      type: \"String\",\n      array: true,\n      arrayRequired: false,\n      required: true\n    },\n    _nlike: {\n      type: \"String\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    _nsimilar: {\n      type: \"String\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    _similar: {\n      type: \"String\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    }\n  },\n  subscription_root: {\n    cr_user: {\n      distinct_on: {\n        type: \"cr_user_select_column\",\n        array: true,\n        arrayRequired: false,\n        required: true\n      },\n      limit: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      offset: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      order_by: {\n        type: \"cr_user_order_by\",\n        array: true,\n        arrayRequired: false,\n        required: true\n      },\n      where: {\n        type: \"cr_user_bool_exp\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      }\n    },\n    cr_user_aggregate: {\n      distinct_on: {\n        type: \"cr_user_select_column\",\n        array: true,\n        arrayRequired: false,\n        required: true\n      },\n      limit: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      offset: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      order_by: {\n        type: \"cr_user_order_by\",\n        array: true,\n        arrayRequired: false,\n        required: true\n      },\n      where: {\n        type: \"cr_user_bool_exp\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      }\n    },\n    cr_user_by_pk: {\n      uuid: {\n        type: \"uuid\",\n        array: false,\n        arrayRequired: false,\n        required: true\n      }\n    },\n    nb_guild: {\n      distinct_on: {\n        type: \"nb_guild_select_column\",\n        array: true,\n        arrayRequired: false,\n        required: true\n      },\n      limit: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      offset: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      order_by: {\n        type: \"nb_guild_order_by\",\n        array: true,\n        arrayRequired: false,\n        required: true\n      },\n      where: {\n        type: \"nb_guild_bool_exp\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      }\n    },\n    nb_guild_aggregate: {\n      distinct_on: {\n        type: \"nb_guild_select_column\",\n        array: true,\n        arrayRequired: false,\n        required: true\n      },\n      limit: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      offset: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      order_by: {\n        type: \"nb_guild_order_by\",\n        array: true,\n        arrayRequired: false,\n        required: true\n      },\n      where: {\n        type: \"nb_guild_bool_exp\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      }\n    },\n    nb_guild_by_pk: {\n      id: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: true\n      }\n    },\n    nb_guild_user: {\n      distinct_on: {\n        type: \"nb_guild_user_select_column\",\n        array: true,\n        arrayRequired: false,\n        required: true\n      },\n      limit: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      offset: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      order_by: {\n        type: \"nb_guild_user_order_by\",\n        array: true,\n        arrayRequired: false,\n        required: true\n      },\n      where: {\n        type: \"nb_guild_user_bool_exp\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      }\n    },\n    nb_guild_user_aggregate: {\n      distinct_on: {\n        type: \"nb_guild_user_select_column\",\n        array: true,\n        arrayRequired: false,\n        required: true\n      },\n      limit: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      offset: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      order_by: {\n        type: \"nb_guild_user_order_by\",\n        array: true,\n        arrayRequired: false,\n        required: true\n      },\n      where: {\n        type: \"nb_guild_user_bool_exp\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      }\n    },\n    nb_guild_user_by_pk: {\n      id: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: true\n      }\n    },\n    nb_meeting: {\n      distinct_on: {\n        type: \"nb_meeting_select_column\",\n        array: true,\n        arrayRequired: false,\n        required: true\n      },\n      limit: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      offset: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      order_by: {\n        type: \"nb_meeting_order_by\",\n        array: true,\n        arrayRequired: false,\n        required: true\n      },\n      where: {\n        type: \"nb_meeting_bool_exp\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      }\n    },\n    nb_meeting_aggregate: {\n      distinct_on: {\n        type: \"nb_meeting_select_column\",\n        array: true,\n        arrayRequired: false,\n        required: true\n      },\n      limit: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      offset: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      order_by: {\n        type: \"nb_meeting_order_by\",\n        array: true,\n        arrayRequired: false,\n        required: true\n      },\n      where: {\n        type: \"nb_meeting_bool_exp\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      }\n    },\n    nb_meeting_by_pk: {\n      id: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: true\n      }\n    },\n    nb_meeting_user: {\n      distinct_on: {\n        type: \"nb_meeting_user_select_column\",\n        array: true,\n        arrayRequired: false,\n        required: true\n      },\n      limit: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      offset: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      order_by: {\n        type: \"nb_meeting_user_order_by\",\n        array: true,\n        arrayRequired: false,\n        required: true\n      },\n      where: {\n        type: \"nb_meeting_user_bool_exp\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      }\n    },\n    nb_meeting_user_aggregate: {\n      distinct_on: {\n        type: \"nb_meeting_user_select_column\",\n        array: true,\n        arrayRequired: false,\n        required: true\n      },\n      limit: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      offset: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      order_by: {\n        type: \"nb_meeting_user_order_by\",\n        array: true,\n        arrayRequired: false,\n        required: true\n      },\n      where: {\n        type: \"nb_meeting_user_bool_exp\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      }\n    },\n    nb_meeting_user_by_pk: {\n      id: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: true\n      }\n    },\n    nb_sphere: {\n      distinct_on: {\n        type: \"nb_sphere_select_column\",\n        array: true,\n        arrayRequired: false,\n        required: true\n      },\n      limit: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      offset: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      order_by: {\n        type: \"nb_sphere_order_by\",\n        array: true,\n        arrayRequired: false,\n        required: true\n      },\n      where: {\n        type: \"nb_sphere_bool_exp\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      }\n    },\n    nb_sphere_aggregate: {\n      distinct_on: {\n        type: \"nb_sphere_select_column\",\n        array: true,\n        arrayRequired: false,\n        required: true\n      },\n      limit: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      offset: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      order_by: {\n        type: \"nb_sphere_order_by\",\n        array: true,\n        arrayRequired: false,\n        required: true\n      },\n      where: {\n        type: \"nb_sphere_bool_exp\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      }\n    },\n    nb_sphere_by_pk: {\n      id: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: true\n      }\n    },\n    nb_sphere_users: {\n      distinct_on: {\n        type: \"nb_sphere_users_select_column\",\n        array: true,\n        arrayRequired: false,\n        required: true\n      },\n      limit: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      offset: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      order_by: {\n        type: \"nb_sphere_users_order_by\",\n        array: true,\n        arrayRequired: false,\n        required: true\n      },\n      where: {\n        type: \"nb_sphere_users_bool_exp\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      }\n    },\n    nb_sphere_users_aggregate: {\n      distinct_on: {\n        type: \"nb_sphere_users_select_column\",\n        array: true,\n        arrayRequired: false,\n        required: true\n      },\n      limit: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      offset: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      },\n      order_by: {\n        type: \"nb_sphere_users_order_by\",\n        array: true,\n        arrayRequired: false,\n        required: true\n      },\n      where: {\n        type: \"nb_sphere_users_bool_exp\",\n        array: false,\n        arrayRequired: false,\n        required: false\n      }\n    },\n    nb_sphere_users_by_pk: {\n      id: {\n        type: \"Int\",\n        array: false,\n        arrayRequired: false,\n        required: true\n      }\n    }\n  },\n  timestamptz: \"String\",\n  timestamptz_comparison_exp: {\n    _eq: {\n      type: \"timestamptz\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    _gt: {\n      type: \"timestamptz\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    _gte: {\n      type: \"timestamptz\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    _in: {\n      type: \"timestamptz\",\n      array: true,\n      arrayRequired: false,\n      required: true\n    },\n    _is_null: {\n      type: \"Boolean\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    _lt: {\n      type: \"timestamptz\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    _lte: {\n      type: \"timestamptz\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    _neq: {\n      type: \"timestamptz\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    _nin: {\n      type: \"timestamptz\",\n      array: true,\n      arrayRequired: false,\n      required: true\n    }\n  },\n  uuid: \"String\",\n  uuid_comparison_exp: {\n    _eq: {\n      type: \"uuid\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    _gt: {\n      type: \"uuid\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    _gte: {\n      type: \"uuid\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    _in: {\n      type: \"uuid\",\n      array: true,\n      arrayRequired: false,\n      required: true\n    },\n    _is_null: {\n      type: \"Boolean\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    _lt: {\n      type: \"uuid\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    _lte: {\n      type: \"uuid\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    _neq: {\n      type: \"uuid\",\n      array: false,\n      arrayRequired: false,\n      required: false\n    },\n    _nin: {\n      type: \"uuid\",\n      array: true,\n      arrayRequired: false,\n      required: true\n    }\n  }\n};\nexport const ReturnTypes = {\n  cr_user: {\n    date_joined: \"timestamptz\",\n    email: \"String\",\n    first_name: \"String\",\n    is_active: \"Boolean\",\n    is_staff: \"Boolean\",\n    is_superuser: \"Boolean\",\n    last_login: \"timestamptz\",\n    last_name: \"String\",\n    nb_guild_users: \"nb_guild_user\",\n    nb_guild_users_aggregate: \"nb_guild_user_aggregate\",\n    nb_meeting_users: \"nb_meeting_user\",\n    nb_meeting_users_aggregate: \"nb_meeting_user_aggregate\",\n    nb_meetings: \"nb_meeting\",\n    nb_meetings_aggregate: \"nb_meeting_aggregate\",\n    nb_sphere_users: \"nb_sphere_users\",\n    nb_sphere_users_aggregate: \"nb_sphere_users_aggregate\",\n    password: \"String\",\n    username: \"String\",\n    uuid: \"uuid\"\n  },\n  cr_user_aggregate: {\n    aggregate: \"cr_user_aggregate_fields\",\n    nodes: \"cr_user\"\n  },\n  cr_user_aggregate_fields: {\n    count: \"Int\",\n    max: \"cr_user_max_fields\",\n    min: \"cr_user_min_fields\"\n  },\n  cr_user_max_fields: {\n    date_joined: \"timestamptz\",\n    email: \"String\",\n    first_name: \"String\",\n    last_login: \"timestamptz\",\n    last_name: \"String\",\n    password: \"String\",\n    username: \"String\"\n  },\n  cr_user_min_fields: {\n    date_joined: \"timestamptz\",\n    email: \"String\",\n    first_name: \"String\",\n    last_login: \"timestamptz\",\n    last_name: \"String\",\n    password: \"String\",\n    username: \"String\"\n  },\n  cr_user_mutation_response: {\n    affected_rows: \"Int\",\n    returning: \"cr_user\"\n  },\n  mutation_root: {\n    delete_cr_user: \"cr_user_mutation_response\",\n    delete_nb_guild: \"nb_guild_mutation_response\",\n    delete_nb_guild_user: \"nb_guild_user_mutation_response\",\n    delete_nb_meeting: \"nb_meeting_mutation_response\",\n    delete_nb_meeting_user: \"nb_meeting_user_mutation_response\",\n    delete_nb_sphere: \"nb_sphere_mutation_response\",\n    delete_nb_sphere_users: \"nb_sphere_users_mutation_response\",\n    insert_cr_user: \"cr_user_mutation_response\",\n    insert_nb_guild: \"nb_guild_mutation_response\",\n    insert_nb_guild_user: \"nb_guild_user_mutation_response\",\n    insert_nb_meeting: \"nb_meeting_mutation_response\",\n    insert_nb_meeting_user: \"nb_meeting_user_mutation_response\",\n    insert_nb_sphere: \"nb_sphere_mutation_response\",\n    insert_nb_sphere_users: \"nb_sphere_users_mutation_response\",\n    update_cr_user: \"cr_user_mutation_response\",\n    update_nb_guild: \"nb_guild_mutation_response\",\n    update_nb_guild_user: \"nb_guild_user_mutation_response\",\n    update_nb_meeting: \"nb_meeting_mutation_response\",\n    update_nb_meeting_user: \"nb_meeting_user_mutation_response\",\n    update_nb_sphere: \"nb_sphere_mutation_response\",\n    update_nb_sphere_users: \"nb_sphere_users_mutation_response\"\n  },\n  nb_guild: {\n    created_at: \"timestamptz\",\n    description: \"String\",\n    id: \"Int\",\n    name: \"String\",\n    nb_guild_users: \"nb_guild_user\",\n    nb_guild_users_aggregate: \"nb_guild_user_aggregate\",\n    nb_meetings: \"nb_meeting\",\n    nb_meetings_aggregate: \"nb_meeting_aggregate\",\n    sphere_id: \"Int\"\n  },\n  nb_guild_aggregate: {\n    aggregate: \"nb_guild_aggregate_fields\",\n    nodes: \"nb_guild\"\n  },\n  nb_guild_aggregate_fields: {\n    avg: \"nb_guild_avg_fields\",\n    count: \"Int\",\n    max: \"nb_guild_max_fields\",\n    min: \"nb_guild_min_fields\",\n    stddev: \"nb_guild_stddev_fields\",\n    stddev_pop: \"nb_guild_stddev_pop_fields\",\n    stddev_samp: \"nb_guild_stddev_samp_fields\",\n    sum: \"nb_guild_sum_fields\",\n    var_pop: \"nb_guild_var_pop_fields\",\n    var_samp: \"nb_guild_var_samp_fields\",\n    variance: \"nb_guild_variance_fields\"\n  },\n  nb_guild_avg_fields: {\n    id: \"Float\",\n    sphere_id: \"Float\"\n  },\n  nb_guild_max_fields: {\n    created_at: \"timestamptz\",\n    description: \"String\",\n    id: \"Int\",\n    name: \"String\",\n    sphere_id: \"Int\"\n  },\n  nb_guild_min_fields: {\n    created_at: \"timestamptz\",\n    description: \"String\",\n    id: \"Int\",\n    name: \"String\",\n    sphere_id: \"Int\"\n  },\n  nb_guild_mutation_response: {\n    affected_rows: \"Int\",\n    returning: \"nb_guild\"\n  },\n  nb_guild_stddev_fields: {\n    id: \"Float\",\n    sphere_id: \"Float\"\n  },\n  nb_guild_stddev_pop_fields: {\n    id: \"Float\",\n    sphere_id: \"Float\"\n  },\n  nb_guild_stddev_samp_fields: {\n    id: \"Float\",\n    sphere_id: \"Float\"\n  },\n  nb_guild_sum_fields: {\n    id: \"Int\",\n    sphere_id: \"Int\"\n  },\n  nb_guild_user: {\n    cr_user: \"cr_user\",\n    guild_id: \"Int\",\n    id: \"Int\",\n    membership_type: \"String\",\n    nb_guild: \"nb_guild\",\n    user_id: \"uuid\"\n  },\n  nb_guild_user_aggregate: {\n    aggregate: \"nb_guild_user_aggregate_fields\",\n    nodes: \"nb_guild_user\"\n  },\n  nb_guild_user_aggregate_fields: {\n    avg: \"nb_guild_user_avg_fields\",\n    count: \"Int\",\n    max: \"nb_guild_user_max_fields\",\n    min: \"nb_guild_user_min_fields\",\n    stddev: \"nb_guild_user_stddev_fields\",\n    stddev_pop: \"nb_guild_user_stddev_pop_fields\",\n    stddev_samp: \"nb_guild_user_stddev_samp_fields\",\n    sum: \"nb_guild_user_sum_fields\",\n    var_pop: \"nb_guild_user_var_pop_fields\",\n    var_samp: \"nb_guild_user_var_samp_fields\",\n    variance: \"nb_guild_user_variance_fields\"\n  },\n  nb_guild_user_avg_fields: {\n    guild_id: \"Float\",\n    id: \"Float\"\n  },\n  nb_guild_user_max_fields: {\n    guild_id: \"Int\",\n    id: \"Int\",\n    membership_type: \"String\"\n  },\n  nb_guild_user_min_fields: {\n    guild_id: \"Int\",\n    id: \"Int\",\n    membership_type: \"String\"\n  },\n  nb_guild_user_mutation_response: {\n    affected_rows: \"Int\",\n    returning: \"nb_guild_user\"\n  },\n  nb_guild_user_stddev_fields: {\n    guild_id: \"Float\",\n    id: \"Float\"\n  },\n  nb_guild_user_stddev_pop_fields: {\n    guild_id: \"Float\",\n    id: \"Float\"\n  },\n  nb_guild_user_stddev_samp_fields: {\n    guild_id: \"Float\",\n    id: \"Float\"\n  },\n  nb_guild_user_sum_fields: {\n    guild_id: \"Int\",\n    id: \"Int\"\n  },\n  nb_guild_user_var_pop_fields: {\n    guild_id: \"Float\",\n    id: \"Float\"\n  },\n  nb_guild_user_var_samp_fields: {\n    guild_id: \"Float\",\n    id: \"Float\"\n  },\n  nb_guild_user_variance_fields: {\n    guild_id: \"Float\",\n    id: \"Float\"\n  },\n  nb_guild_var_pop_fields: {\n    id: \"Float\",\n    sphere_id: \"Float\"\n  },\n  nb_guild_var_samp_fields: {\n    id: \"Float\",\n    sphere_id: \"Float\"\n  },\n  nb_guild_variance_fields: {\n    id: \"Float\",\n    sphere_id: \"Float\"\n  },\n  nb_meeting: {\n    created_at: \"timestamptz\",\n    description: \"String\",\n    end_time: \"timestamptz\",\n    guild_id: \"Int\",\n    id: \"Int\",\n    location: \"String\",\n    nb_guild: \"nb_guild\",\n    nb_meeting_users: \"nb_meeting_user\",\n    nb_meeting_users_aggregate: \"nb_meeting_user_aggregate\",\n    organizer: \"cr_user\",\n    organizer_id: \"uuid\",\n    publication_time: \"timestamptz\",\n    start_time: \"timestamptz\",\n    title: \"String\",\n    updated_at: \"timestamptz\"\n  },\n  nb_meeting_aggregate: {\n    aggregate: \"nb_meeting_aggregate_fields\",\n    nodes: \"nb_meeting\"\n  },\n  nb_meeting_aggregate_fields: {\n    avg: \"nb_meeting_avg_fields\",\n    count: \"Int\",\n    max: \"nb_meeting_max_fields\",\n    min: \"nb_meeting_min_fields\",\n    stddev: \"nb_meeting_stddev_fields\",\n    stddev_pop: \"nb_meeting_stddev_pop_fields\",\n    stddev_samp: \"nb_meeting_stddev_samp_fields\",\n    sum: \"nb_meeting_sum_fields\",\n    var_pop: \"nb_meeting_var_pop_fields\",\n    var_samp: \"nb_meeting_var_samp_fields\",\n    variance: \"nb_meeting_variance_fields\"\n  },\n  nb_meeting_avg_fields: {\n    guild_id: \"Float\",\n    id: \"Float\"\n  },\n  nb_meeting_max_fields: {\n    created_at: \"timestamptz\",\n    description: \"String\",\n    end_time: \"timestamptz\",\n    guild_id: \"Int\",\n    id: \"Int\",\n    location: \"String\",\n    publication_time: \"timestamptz\",\n    start_time: \"timestamptz\",\n    title: \"String\",\n    updated_at: \"timestamptz\"\n  },\n  nb_meeting_min_fields: {\n    created_at: \"timestamptz\",\n    description: \"String\",\n    end_time: \"timestamptz\",\n    guild_id: \"Int\",\n    id: \"Int\",\n    location: \"String\",\n    publication_time: \"timestamptz\",\n    start_time: \"timestamptz\",\n    title: \"String\",\n    updated_at: \"timestamptz\"\n  },\n  nb_meeting_mutation_response: {\n    affected_rows: \"Int\",\n    returning: \"nb_meeting\"\n  },\n  nb_meeting_stddev_fields: {\n    guild_id: \"Float\",\n    id: \"Float\"\n  },\n  nb_meeting_stddev_pop_fields: {\n    guild_id: \"Float\",\n    id: \"Float\"\n  },\n  nb_meeting_stddev_samp_fields: {\n    guild_id: \"Float\",\n    id: \"Float\"\n  },\n  nb_meeting_sum_fields: {\n    guild_id: \"Int\",\n    id: \"Int\"\n  },\n  nb_meeting_user: {\n    cr_user: \"cr_user\",\n    id: \"Int\",\n    meeting_id: \"Int\",\n    nb_meeting: \"nb_meeting\",\n    status: \"String\",\n    user_id: \"uuid\"\n  },\n  nb_meeting_user_aggregate: {\n    aggregate: \"nb_meeting_user_aggregate_fields\",\n    nodes: \"nb_meeting_user\"\n  },\n  nb_meeting_user_aggregate_fields: {\n    avg: \"nb_meeting_user_avg_fields\",\n    count: \"Int\",\n    max: \"nb_meeting_user_max_fields\",\n    min: \"nb_meeting_user_min_fields\",\n    stddev: \"nb_meeting_user_stddev_fields\",\n    stddev_pop: \"nb_meeting_user_stddev_pop_fields\",\n    stddev_samp: \"nb_meeting_user_stddev_samp_fields\",\n    sum: \"nb_meeting_user_sum_fields\",\n    var_pop: \"nb_meeting_user_var_pop_fields\",\n    var_samp: \"nb_meeting_user_var_samp_fields\",\n    variance: \"nb_meeting_user_variance_fields\"\n  },\n  nb_meeting_user_avg_fields: {\n    id: \"Float\",\n    meeting_id: \"Float\"\n  },\n  nb_meeting_user_max_fields: {\n    id: \"Int\",\n    meeting_id: \"Int\",\n    status: \"String\"\n  },\n  nb_meeting_user_min_fields: {\n    id: \"Int\",\n    meeting_id: \"Int\",\n    status: \"String\"\n  },\n  nb_meeting_user_mutation_response: {\n    affected_rows: \"Int\",\n    returning: \"nb_meeting_user\"\n  },\n  nb_meeting_user_stddev_fields: {\n    id: \"Float\",\n    meeting_id: \"Float\"\n  },\n  nb_meeting_user_stddev_pop_fields: {\n    id: \"Float\",\n    meeting_id: \"Float\"\n  },\n  nb_meeting_user_stddev_samp_fields: {\n    id: \"Float\",\n    meeting_id: \"Float\"\n  },\n  nb_meeting_user_sum_fields: {\n    id: \"Int\",\n    meeting_id: \"Int\"\n  },\n  nb_meeting_user_var_pop_fields: {\n    id: \"Float\",\n    meeting_id: \"Float\"\n  },\n  nb_meeting_user_var_samp_fields: {\n    id: \"Float\",\n    meeting_id: \"Float\"\n  },\n  nb_meeting_user_variance_fields: {\n    id: \"Float\",\n    meeting_id: \"Float\"\n  },\n  nb_meeting_var_pop_fields: {\n    guild_id: \"Float\",\n    id: \"Float\"\n  },\n  nb_meeting_var_samp_fields: {\n    guild_id: \"Float\",\n    id: \"Float\"\n  },\n  nb_meeting_variance_fields: {\n    guild_id: \"Float\",\n    id: \"Float\"\n  },\n  nb_sphere: {\n    id: \"Int\",\n    name: \"String\",\n    nb_sphere_users: \"nb_sphere_users\",\n    nb_sphere_users_aggregate: \"nb_sphere_users_aggregate\"\n  },\n  nb_sphere_aggregate: {\n    aggregate: \"nb_sphere_aggregate_fields\",\n    nodes: \"nb_sphere\"\n  },\n  nb_sphere_aggregate_fields: {\n    avg: \"nb_sphere_avg_fields\",\n    count: \"Int\",\n    max: \"nb_sphere_max_fields\",\n    min: \"nb_sphere_min_fields\",\n    stddev: \"nb_sphere_stddev_fields\",\n    stddev_pop: \"nb_sphere_stddev_pop_fields\",\n    stddev_samp: \"nb_sphere_stddev_samp_fields\",\n    sum: \"nb_sphere_sum_fields\",\n    var_pop: \"nb_sphere_var_pop_fields\",\n    var_samp: \"nb_sphere_var_samp_fields\",\n    variance: \"nb_sphere_variance_fields\"\n  },\n  nb_sphere_avg_fields: {\n    id: \"Float\"\n  },\n  nb_sphere_max_fields: {\n    id: \"Int\",\n    name: \"String\"\n  },\n  nb_sphere_min_fields: {\n    id: \"Int\",\n    name: \"String\"\n  },\n  nb_sphere_mutation_response: {\n    affected_rows: \"Int\",\n    returning: \"nb_sphere\"\n  },\n  nb_sphere_stddev_fields: {\n    id: \"Float\"\n  },\n  nb_sphere_stddev_pop_fields: {\n    id: \"Float\"\n  },\n  nb_sphere_stddev_samp_fields: {\n    id: \"Float\"\n  },\n  nb_sphere_sum_fields: {\n    id: \"Int\"\n  },\n  nb_sphere_users: {\n    cr_user: \"cr_user\",\n    id: \"Int\",\n    nb_sphere: \"nb_sphere\",\n    sphere_id: \"Int\",\n    user_id: \"uuid\"\n  },\n  nb_sphere_users_aggregate: {\n    aggregate: \"nb_sphere_users_aggregate_fields\",\n    nodes: \"nb_sphere_users\"\n  },\n  nb_sphere_users_aggregate_fields: {\n    avg: \"nb_sphere_users_avg_fields\",\n    count: \"Int\",\n    max: \"nb_sphere_users_max_fields\",\n    min: \"nb_sphere_users_min_fields\",\n    stddev: \"nb_sphere_users_stddev_fields\",\n    stddev_pop: \"nb_sphere_users_stddev_pop_fields\",\n    stddev_samp: \"nb_sphere_users_stddev_samp_fields\",\n    sum: \"nb_sphere_users_sum_fields\",\n    var_pop: \"nb_sphere_users_var_pop_fields\",\n    var_samp: \"nb_sphere_users_var_samp_fields\",\n    variance: \"nb_sphere_users_variance_fields\"\n  },\n  nb_sphere_users_avg_fields: {\n    id: \"Float\",\n    sphere_id: \"Float\"\n  },\n  nb_sphere_users_max_fields: {\n    id: \"Int\",\n    sphere_id: \"Int\"\n  },\n  nb_sphere_users_min_fields: {\n    id: \"Int\",\n    sphere_id: \"Int\"\n  },\n  nb_sphere_users_mutation_response: {\n    affected_rows: \"Int\",\n    returning: \"nb_sphere_users\"\n  },\n  nb_sphere_users_stddev_fields: {\n    id: \"Float\",\n    sphere_id: \"Float\"\n  },\n  nb_sphere_users_stddev_pop_fields: {\n    id: \"Float\",\n    sphere_id: \"Float\"\n  },\n  nb_sphere_users_stddev_samp_fields: {\n    id: \"Float\",\n    sphere_id: \"Float\"\n  },\n  nb_sphere_users_sum_fields: {\n    id: \"Int\",\n    sphere_id: \"Int\"\n  },\n  nb_sphere_users_var_pop_fields: {\n    id: \"Float\",\n    sphere_id: \"Float\"\n  },\n  nb_sphere_users_var_samp_fields: {\n    id: \"Float\",\n    sphere_id: \"Float\"\n  },\n  nb_sphere_users_variance_fields: {\n    id: \"Float\",\n    sphere_id: \"Float\"\n  },\n  nb_sphere_var_pop_fields: {\n    id: \"Float\"\n  },\n  nb_sphere_var_samp_fields: {\n    id: \"Float\"\n  },\n  nb_sphere_variance_fields: {\n    id: \"Float\"\n  },\n  query_root: {\n    cr_user: \"cr_user\",\n    cr_user_aggregate: \"cr_user_aggregate\",\n    cr_user_by_pk: \"cr_user\",\n    nb_guild: \"nb_guild\",\n    nb_guild_aggregate: \"nb_guild_aggregate\",\n    nb_guild_by_pk: \"nb_guild\",\n    nb_guild_user: \"nb_guild_user\",\n    nb_guild_user_aggregate: \"nb_guild_user_aggregate\",\n    nb_guild_user_by_pk: \"nb_guild_user\",\n    nb_meeting: \"nb_meeting\",\n    nb_meeting_aggregate: \"nb_meeting_aggregate\",\n    nb_meeting_by_pk: \"nb_meeting\",\n    nb_meeting_user: \"nb_meeting_user\",\n    nb_meeting_user_aggregate: \"nb_meeting_user_aggregate\",\n    nb_meeting_user_by_pk: \"nb_meeting_user\",\n    nb_sphere: \"nb_sphere\",\n    nb_sphere_aggregate: \"nb_sphere_aggregate\",\n    nb_sphere_by_pk: \"nb_sphere\",\n    nb_sphere_users: \"nb_sphere_users\",\n    nb_sphere_users_aggregate: \"nb_sphere_users_aggregate\",\n    nb_sphere_users_by_pk: \"nb_sphere_users\"\n  },\n  subscription_root: {\n    cr_user: \"cr_user\",\n    cr_user_aggregate: \"cr_user_aggregate\",\n    cr_user_by_pk: \"cr_user\",\n    nb_guild: \"nb_guild\",\n    nb_guild_aggregate: \"nb_guild_aggregate\",\n    nb_guild_by_pk: \"nb_guild\",\n    nb_guild_user: \"nb_guild_user\",\n    nb_guild_user_aggregate: \"nb_guild_user_aggregate\",\n    nb_guild_user_by_pk: \"nb_guild_user\",\n    nb_meeting: \"nb_meeting\",\n    nb_meeting_aggregate: \"nb_meeting_aggregate\",\n    nb_meeting_by_pk: \"nb_meeting\",\n    nb_meeting_user: \"nb_meeting_user\",\n    nb_meeting_user_aggregate: \"nb_meeting_user_aggregate\",\n    nb_meeting_user_by_pk: \"nb_meeting_user\",\n    nb_sphere: \"nb_sphere\",\n    nb_sphere_aggregate: \"nb_sphere_aggregate\",\n    nb_sphere_by_pk: \"nb_sphere\",\n    nb_sphere_users: \"nb_sphere_users\",\n    nb_sphere_users_aggregate: \"nb_sphere_users_aggregate\",\n    nb_sphere_users_by_pk: \"nb_sphere_users\"\n  }\n};\nexport class GraphQLError extends Error {\n  constructor(response) {\n    super(\"\");\n    this.response = response;\n    console.error(response);\n  }\n\n  toString() {\n    return \"GraphQL Response Error\";\n  }\n\n}\nexport const ZeusSelect = () => t => t;\nexport const ScalarResolver = (scalar, value) => {\n  switch (scalar) {\n    case 'String':\n      return `\"${value.replace(/\"/g, '\\\\\\\"')}\"`;\n\n    case 'Int':\n      return `${value}`;\n\n    case 'Float':\n      return `${value}`;\n\n    case 'Boolean':\n      return `${value}`;\n\n    case 'ID':\n      return `\"${value}\"`;\n\n    case 'enum':\n      return `${value}`;\n\n    case 'scalar':\n      return `${value}`;\n\n    default:\n      return false;\n  }\n};\nexport const TypesPropsResolver = ({\n  value,\n  type,\n  name,\n  key,\n  blockArrays\n}) => {\n  if (value === null) {\n    return `null`;\n  }\n\n  let resolvedValue = AllTypesProps[type][name];\n\n  if (key) {\n    resolvedValue = resolvedValue[key];\n  }\n\n  if (!resolvedValue) {\n    throw new Error(`Cannot resolve ${type} ${name}${key ? ` ${key}` : ''}`);\n  }\n\n  const typeResolved = resolvedValue.type;\n  const isArray = resolvedValue.array;\n\n  if (isArray && !blockArrays) {\n    return `[${value.map(v => TypesPropsResolver({\n      value: v,\n      type,\n      name,\n      key,\n      blockArrays: true\n    })).join(',')}]`;\n  }\n\n  const reslovedScalar = ScalarResolver(typeResolved, value);\n\n  if (!reslovedScalar) {\n    const resolvedType = AllTypesProps[typeResolved];\n\n    if (typeof resolvedType === 'object') {\n      const argsKeys = Object.keys(resolvedType);\n      return `{${argsKeys.filter(ak => value[ak] !== undefined).map(ak => `${ak}:${TypesPropsResolver({\n        value: value[ak],\n        type: typeResolved,\n        name: ak\n      })}`)}}`;\n    }\n\n    return ScalarResolver(AllTypesProps[typeResolved], value);\n  }\n\n  return reslovedScalar;\n};\n\nconst isArrayFunction = (parent, a) => {\n  const [values, r] = a;\n  const [mainKey, key, ...keys] = parent;\n  const keyValues = Object.keys(values);\n\n  if (!keys.length) {\n    return keyValues.length > 0 ? `(${keyValues.map(v => `${v}:${TypesPropsResolver({\n      value: values[v],\n      type: mainKey,\n      name: key,\n      key: v\n    })}`).join(',')})${r ? traverseToSeekArrays(parent, r) : ''}` : traverseToSeekArrays(parent, r);\n  }\n\n  const [typeResolverKey] = keys.splice(keys.length - 1, 1);\n  let valueToResolve = ReturnTypes[mainKey][key];\n\n  for (const k of keys) {\n    valueToResolve = ReturnTypes[valueToResolve][k];\n  }\n\n  const argumentString = keyValues.length > 0 ? `(${keyValues.map(v => `${v}:${TypesPropsResolver({\n    value: values[v],\n    type: valueToResolve,\n    name: typeResolverKey,\n    key: v\n  })}`).join(',')})${r ? traverseToSeekArrays(parent, r) : ''}` : traverseToSeekArrays(parent, r);\n  return argumentString;\n};\n\nconst resolveKV = (k, v) => typeof v === 'boolean' ? k : typeof v === 'object' ? `${k}{${objectToTree(v)}}` : `${k}${v}`;\n\nconst objectToTree = o => `{${Object.keys(o).map(k => `${resolveKV(k, o[k])}`).join(' ')}}`;\n\nconst traverseToSeekArrays = (parent, a) => {\n  if (!a) return '';\n\n  if (Object.keys(a).length === 0) {\n    return '';\n  }\n\n  let b = {};\n\n  if (Array.isArray(a)) {\n    return isArrayFunction([...parent], a);\n  } else {\n    if (typeof a === 'object') {\n      Object.keys(a).map(k => {\n        if (k === '__alias') {\n          Object.keys(a[k]).map(aliasKey => {\n            const aliasOperations = a[k][aliasKey];\n            const aliasOperationName = Object.keys(aliasOperations)[0];\n            const aliasOperation = aliasOperations[aliasOperationName];\n            b[`${aliasOperationName}__alias__${aliasKey}: ${aliasOperationName}`] = traverseToSeekArrays([...parent, aliasOperationName], aliasOperation);\n          });\n        } else {\n          b[k] = traverseToSeekArrays([...parent, k], a[k]);\n        }\n      });\n    } else {\n      return '';\n    }\n  }\n\n  return objectToTree(b);\n};\n\nconst buildQuery = (type, a) => traverseToSeekArrays([type], a);\n\nconst queryConstruct = (t, tName) => o => `${t.toLowerCase()}${buildQuery(tName, o)}`;\n\nconst fullChainConstruct = options => (t, tName) => o => apiFetch(options, queryConstruct(t, tName)(o));\n\nconst seekForAliases = o => {\n  if (typeof o === 'object' && o) {\n    const keys = Object.keys(o);\n\n    if (keys.length < 1) {\n      return;\n    }\n\n    keys.forEach(k => {\n      const value = o[k];\n\n      if (k.indexOf('__alias__') !== -1) {\n        const [operation, alias] = k.split('__alias__');\n        o[alias] = {\n          [operation]: value\n        };\n        delete o[k];\n      } else {\n        if (Array.isArray(value)) {\n          value.forEach(seekForAliases);\n        } else {\n          if (typeof value === 'object') {\n            seekForAliases(value);\n          }\n        }\n      }\n    });\n  }\n};\n\nconst handleFetchResponse = response => {\n  if (!response.ok) {\n    return new Promise((resolve, reject) => {\n      response.text().then(text => {\n        try {\n          reject(JSON.parse(text));\n        } catch (err) {\n          reject(text);\n        }\n      }).catch(reject);\n    });\n  }\n\n  return response.json();\n};\n\nconst apiFetch = (options, query) => {\n  let fetchFunction = fetch;\n  let queryString = query;\n  let fetchOptions = options[1] || {};\n\n  if (fetchOptions.method && fetchOptions.method === 'GET') {\n    queryString = encodeURIComponent(query);\n    return fetchFunction(`${options[0]}?query=${queryString}`, fetchOptions).then(handleFetchResponse).then(response => {\n      if (response.errors) {\n        throw new GraphQLError(response);\n      }\n\n      seekForAliases(response.data);\n      return response.data;\n    });\n  }\n\n  return fetchFunction(`${options[0]}`, _objectSpread({\n    body: JSON.stringify({\n      query: queryString\n    }),\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }, fetchOptions)).then(handleFetchResponse).then(response => {\n    if (response.errors) {\n      throw new GraphQLError(response);\n    }\n\n    seekForAliases(response.data);\n    return response.data;\n  });\n};\n\nexport const Chain = (...options) => ({\n  query: o => fullChainConstruct(options)('query', 'query_root')(o).then(response => response),\n  mutation: o => fullChainConstruct(options)('mutation', 'mutation_root')(o).then(response => response),\n  subscription: o => fullChainConstruct(options)('subscription', 'subscription_root')(o).then(response => response)\n});\nexport const Zeus = {\n  query: o => queryConstruct('query', 'query_root')(o),\n  mutation: o => queryConstruct('mutation', 'mutation_root')(o),\n  subscription: o => queryConstruct('subscription', 'subscription_root')(o)\n};\nexport const Cast = {\n  query: o => b => o,\n  mutation: o => b => o,\n  subscription: o => b => o\n};\nexport const Selectors = {\n  query: ZeusSelect(),\n  mutation: ZeusSelect(),\n  subscription: ZeusSelect()\n};","map":null,"metadata":{},"sourceType":"module"}