{"ast":null,"code":"var _jsxFileName = \"/home/hasparus/workspace/zagrajmy/frontend/packages/app/src/ui/Link.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { Link as BaseLink } from \"../lib/Link\";\nimport { useTheme } from \"./theme\";\nimport { jsx } from \"theme-ui\";\nexport const Link = (_ref) => {\n  let {\n    variant\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"variant\"]);\n\n  const {\n    theme\n  } = useTheme();\n  const variantStyles = variant === \"button\" ? theme.buttons.primary : {};\n  return jsx(BaseLink, _extends({\n    sx: variantStyles\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 10\n    }\n  }));\n};","map":{"version":3,"sources":["/home/hasparus/workspace/zagrajmy/frontend/packages/app/src/ui/Link.tsx"],"names":["Link","BaseLink","useTheme","variant","rest","theme","variantStyles","buttons","primary"],"mappings":";;;;;;;;;;AAAA,SAASA,IAAI,IAAIC,QAAjB,QAA6D,aAA7D;AACA,SAASC,QAAT,QAAyB,SAAzB;;AAKA,OAAO,MAAMF,IAAI,GAAG,UAAqC;AAAA,MAApC;AAAEG,IAAAA;AAAF,GAAoC;AAAA,MAAtBC,IAAsB;;AACvD,QAAM;AAAEC,IAAAA;AAAF,MAAYH,QAAQ,EAA1B;AACA,QAAMI,aAAa,GAAGH,OAAO,KAAK,QAAZ,GAAuBE,KAAK,CAACE,OAAN,CAAcC,OAArC,GAA+C,EAArE;AAEA,SAAO,IAAC,QAAD;AAAU,IAAA,EAAE,EAAEF;AAAd,KAAiCF,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CALM","sourcesContent":["import { Link as BaseLink, LinkProps as BaseLinkProps } from \"../lib/Link\";\nimport { useTheme } from \"./theme\";\n\nexport interface LinkProps extends BaseLinkProps {\n  variant?: \"button\";\n}\nexport const Link = ({ variant, ...rest }: LinkProps) => {\n  const { theme } = useTheme();\n  const variantStyles = variant === \"button\" ? theme.buttons.primary : {};\n\n  return <BaseLink sx={variantStyles} {...rest} />;\n};\n"]},"metadata":{},"sourceType":"module"}